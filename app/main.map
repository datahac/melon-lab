{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/iterall/index.mjs","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/electron/graphql.ts","webpack:///./src/electron/index.ts","webpack:///./src/shared/graphql/schema/context.ts","webpack:///./src/shared/graphql/schema/directives/addQueryDirectives.ts","webpack:///./src/shared/graphql/schema/environment/index.ts","webpack:///./src/shared/graphql/schema/index.ts","webpack:///./src/shared/graphql/schema/loaders.ts","webpack:///./src/shared/graphql/schema/loaders/assetPrice.ts","webpack:///./src/shared/graphql/schema/loaders/exchangeOrders.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundAddressFromManager.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundCalculations.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundDenominationAsset.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundHoldings.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundInception.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundIsComplete.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundIsShutdown.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundName.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundNativeAsset.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundOwner.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundParticipation.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundRoutes.ts","webpack:///./src/shared/graphql/schema/loaders/fund/fundTotalSupply.ts","webpack:///./src/shared/graphql/schema/loaders/quoteToken.ts","webpack:///./src/shared/graphql/schema/loaders/routes.ts","webpack:///./src/shared/graphql/schema/loaders/symbolBalance.ts","webpack:///./src/shared/graphql/schema/loaders/symbolBalanceObservable.ts","webpack:///./src/shared/graphql/schema/loaders/wallet/decryptWallet.ts","webpack:///./src/shared/graphql/schema/loaders/wallet/generateMnemonic.ts","webpack:///./src/shared/graphql/schema/loaders/wallet/restoreWallet.ts","webpack:///./src/shared/graphql/schema/resolvers.ts","webpack:///./src/shared/graphql/schema/schema.gql","webpack:///./src/shared/graphql/schema/utils/currentPeers.ts","webpack:///./src/shared/graphql/schema/utils/currentRanking.ts","webpack:///./src/shared/graphql/schema/utils/hasRecentPrice.ts","webpack:///./src/shared/graphql/schema/utils/resolveNetwork.ts","webpack:///./src/shared/graphql/schema/utils/sameBlock.ts","webpack:///./src/shared/graphql/schema/utils/subscribeBlock.ts","webpack:///./src/shared/graphql/schema/utils/subscribeSyncing.ts","webpack:///./src/shared/graphql/schema/utils/takeLast.ts","webpack:///./src/shared/graphql/schema/utils/toAsyncIterator.ts","webpack:///./src/shared/graphql/server.ts","webpack:///external \"@melonproject/exchange-aggregator\"","webpack:///external \"@melonproject/ganache-cli\"","webpack:///external \"@melonproject/protocol\"","webpack:///external \"@melonproject/protocol/lib/contracts/dependencies/token/calls/getToken\"","webpack:///external \"@melonproject/protocol/lib/contracts/exchanges/transactions/makeOrderFromAccountOasisDex\"","webpack:///external \"@melonproject/protocol/lib/contracts/fund/accounting/calls/getNativeToken\"","webpack:///external \"@melonproject/protocol/lib/contracts/fund/accounting/calls/performCalculations\"","webpack:///external \"@melonproject/protocol/lib/contracts/fund/hub/calls/getCreationTime\"","webpack:///external \"@melonproject/protocol/lib/contracts/fund/hub/calls/isShutDown\"","webpack:///external \"@melonproject/protocol/lib/utils/environment/getTokenByAddress\"","webpack:///external \"@melonproject/protocol/lib/utils/environment/getTokenBySymbol\"","webpack:///external \"@melonproject/token-math\"","webpack:///external \"apollo-link\"","webpack:///external \"apollo-utilities\"","webpack:///external \"bip39\"","webpack:///external \"dataloader\"","webpack:///external \"devtron\"","webpack:///external \"electron\"","webpack:///external \"electron-debug\"","webpack:///external \"electron-devtools-installer\"","webpack:///external \"electron-is-dev\"","webpack:///external \"ethers-wallet\"","webpack:///external \"fs\"","webpack:///external \"graphql\"","webpack:///external \"graphql-iso-date\"","webpack:///external \"graphql-tools\"","webpack:///external \"graphql/execution\"","webpack:///external \"graphql/language\"","webpack:///external \"http\"","webpack:///external \"keytar\"","webpack:///external \"memoize-one\"","webpack:///external \"next\"","webpack:///external \"path\"","webpack:///external \"ramda\"","webpack:///external \"rxjs\"","webpack:///external \"rxjs/operators\"","webpack:///external \"url\"","webpack:///external \"web3-eth-accounts\""],"names":["getEnvironment","environment","getWallet","wallet","createContext","context","link","createSchemaLink","schema","createIpcExecutor","ipc","ipcMain","isWindows","process","platform","isDev","require","enabled","showDevTools","mainWindow","restoreMainWindow","setupGql","electron","Menu","setApplicationMenu","buildFromTemplate","label","submenu","accelerator","click","app","quit","selector","BrowserWindow","width","height","webPreferences","nodeIntegration","preload","path","resolve","__dirname","handleRedirect","event","url","webContents","getURL","preventDefault","shell","openExternal","on","next","dev","dir","requestHandler","getRequestHandler","prepare","Promise","server","http","createServer","listen","close","loadURL","appUrl","format","pathname","protocol","slashes","interceptFileProtocol","request","callback","reqUrl","substr","reqUrlFinal","replace","parse","root","normalize","join","install","default","REACT_DEVELOPER_TOOLS","REDUX_DEVTOOLS","then","name","console","log","catch","error","currentWallet","block$","subscribeBlock","pipe","publishReplay","syncing$","subscribeSyncing","peers$","currentPeers","ranking$","currentRanking","recentPrice$","hasRecentPrice","streams","Object","values","forEach","stream$","connect","loaders","setWallet","value","createLoaders","DirectiveLocation","graphqlLanguage","getFieldResolver","field","resolver","defaultFieldResolver","bind","getDirectiveInfo","directive","resolverMap","location","variables","Directive","getDirective","Error","locations","includes","args","getDirectiveValues","directives","createFieldResolver","originalResolver","source","info","fieldNodes","resolvers","map","directiveInfo","FIELD","variableValues","filter","length","chain","reduce","carry","current","parent","addQueryDirectives","Array","isArray","forEachField","mnemonic","getTestEnvironment","track","chainPath","cwd","databasePath","fs","existsSync","mkdirSync","provider","Ganache","gasLimit","default_balance_ether","total_accounts","logger","db_path","deploymentPath","constructEnvironment","deployment","JSON","readFileSync","toString","Wallet","fromMnemonic","accounts","Web3Accounts","eth","currentProvider","signTransaction","transaction","privateKey","t","rawTransaction","withWallet","deployThirdParty","thirdParty","deploySystem","deployAllContractsConfig","withDeployment","writeFileSync","stringify","melonContracts","priceSource","wethToken","getTokenBySymbol","mlnToken","mlnPrice","Tm","ethPrice","update","matchingMarketAddress","exchangeConfigs","MatchingMarket","exchange","makeOrderFromAccountOasisDex","buy","sell","makeExecutableSchema","typeDefs","inheritResolversFromInterfaces","sign","directiveArgs","target","Accounts","unsigned","signed","newArgs","account","arg","address","undefined","fundIsComplete","DataLoader","addresses","fn","getFundIsComplete","all","fundAddressFromManager","getFundAddressFromManager","routes","getRoutes","fundName","getFundName","fundDenominationAsset","fundRoutes","loadMany","key","accountingAddress","getFundDenominationAsset","fundNativeAsset","getFundNativeAsset","fundReady","fundOwner","getFundOwner","getFundRoutes","fundTotalSupply","sharesAddress","getFundTotalSupply","fundRank","takeLast","ranking","entry","R","fundInception","getFundInception","fundCalculations","getFundCalculations","fundHoldings","getFundHoldings","fundIsShutdown","getFundIsShutdown","fundParticipation","pairs","funds","pair","fund","investors","investor","getFundParticipation","cacheKeyFn","fundByName","names","fundRanking","memoizeOne","symbolBalance","getSymbolBalance","result","symbol","symbolBalanceObservable","getSymbolBalanceObservable","assetPrice","tokens","getAssetPrice","token","exchangeOrders","getExchangeOrders","base","quote","options","quoteToken","getQuoteToken","currentBlock","pluck","nodeSynced","priceFeedUp","peerCount","versionDeployment","networkName","resolveNetwork","net","getId","generateMnemonic","importWallet","restoreWallet","getPrice","network","Network","MAINNET","exchanges","oasisdex","fetch","radarrelay","kyber","ethfinex","managerAddress","managersToHubs","version","performCalculations","getDenominationAsset","quantities","availableTokens","quantity","holdings","isAddress","isEmptyAddress","getTokenByAddress","getCreationTime","fundAddress","childExists","isShutDown","getName","getNativeToken","getManager","investorAddress","balanceOf","getTotalSupply","getInfo","getToken","totalSupply","managersToRoutes","isValidAddress","accounting","feeManagerAddress","feeManager","participationAddress","participation","policyManagerAddress","policyManager","shares","tradingAddress","trading","vaultAddress","vault","registryAddress","registry","versionAddress","getEthBalance","getBalance","balance","switchMap","zen","observable","Rx","noop","decrypted","encrypted","decryptWallet","password","fromEncryptedWallet","bip39","encrypt","DateTime","Query","defaultAccount","_","__","allAccounts","hasStoredWallet","keytar","credentials","totalFunds","contractDeployment","rankings","orders","load","associatedFund","manager","Ranking","id","Buffer","from","inception","creationTime","Fund","isComplete","isShutdown","owner","denominationAsset","nativeAsset","rank","personalStake","gav","nav","sharePrice","managementReward","managementFeeRate","performanceReward","performanceFeeRate","unclaimedFees","feesShareQuantity","Order","__resolveType","object","price","trade","volume","ZeroExOrder","metadata","original","signedOrder","OasisDexOrder","Holding","fraction","Mutation","estimateFundSetupBegin","managementFee","performanceFee","thirdPartyContracts","selectedExchanges","ZeroEx","KyberNetwork","Ethfinex","nativeToken","find","fees","feeAddress","toLowerCase","feePeriod","feeRate","params","defaultTokens","env","withDifferentAccount","beginSetup","executeFundSetupBegin","send","estimateFundSetupStep","step","CREATE_ACCOUNTING","createAccounting","CREATE_FEE_MANAGER","createFeeManager","CREATE_PARTICIPATION","createParticipation","CREATE_POLICY_MANAGER","createPolicyManager","CREATE_SHARES","createShares","CREATE_TRADING","createTrading","CREATE_VAULT","createVault","executeFundSetupStep","estimateFundSetupComplete","completeSetup","executeFundSetupComplete","estimateRequestInvestment","investmentAmount","requestInvestment","executeRequestInvestment","estimateApproveTransfer","howMuch","spender","approveTransfer","executeApproveTransfer","estimateExecuteRequest","executeRequest","executeExecuteRequest","estimateShutDownFund","hub","shutDownFund","executeShutDownFund","estimateTriggerRewardAllFees","triggerRewardAllFees","executeTriggerRewardAllFees","estimateMakeOrder","buyToken","buyQuantity","sellToken","sellQuantity","makerQuantity","takerQuantity","makeOasisDexOrder","executeMakeOrder","type","order","estimateCancelOrder","makerAsset","takerAsset","cancelOasisDexOrder","maker","executeCancelOrder","estimateDeployUserWhitelist","deployContract","Contracts","UserWhitelist","unsignedTransaction","estimateDeployAssetBlacklist","symbols","AssetBlacklist","estimateDeployAssetWhitelist","AssetWhitelist","estimateDeployMaxConcentration","percent","MaxConcentration","estimateDeployMaxPositions","positions","MaxPositions","estimateDeployPriceTolerance","PriceTolerance","executeDeploy","signedTransaction","estimateRegisterPolicies","policies","registrations","method","FunctionSignatures","takeOrder","policy","makeOrder","cancelOrder","executeRequestFor","register","executeRegisterPolicies","deleteWallet","item","loginWallet","exportWallet","Subscription","subscribe","observable$","distinctUntilChanged","toAsyncIterator","sameBlock","state","tap","distinctUntilKeyChanged","throttleTime","getPeerCount","a","requestRanking","rankingAddress","getFundDetails","timeout","retryWhen","errors","delay","throttled$","concatMap","requestHasRecentPrice","hasValidPrice","b","getBlock","subscription","isSyncing","wait","reject","take","promiseCapability","x","promise","done","return","unsubscribe","throw","$$asyncIterator","isSubscription","query","main","getMainDefinition","kind","operation","ApolloLink","Observable","observer","executor","execute","operationName","data","iterable","isAsyncIterable","createAsyncIterator","forAwaitEach","complete","channel","result$","executeLink","sender"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,iBAAiB,mBAAO,CAAC,iFAAqB;;;;;;;;;;;;;ACA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,KAAK,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,iDAAiD;AAC1C;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,2DAA2D;AACpD;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,4DAA4D;AACrD;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,6DAA6D;AACtD;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA,WAAW,YAAY;AACvB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA,kDAAkD;AAC3C;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA,4DAA4D;AACrD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA,WAAW,aAAa,kBAAkB;AAC1C;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,sDAAsD;AAC/C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,aAAa,kBAAkB;AAC1C;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA,eAAe;AACR;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,cAAc,8BAA8B;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,oBAAoB,sBAAsB,oBAAoB;AAClE;AACA,8DAA8D,eAAe;AAC7E;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB,KAAK,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAA+B;AACrD,YAAY;AACZ;AACA,wBAAwB,iCAAiC;AACzD,cAAc;AACd;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,2DAA2D;AACpD;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,gEAAgE;AACzD;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,8CAA8C;AAC9C,8CAA8C;AAC9C,8CAA8C;AAC9C;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA,8DAA8D;AACvD;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;AACA,sEAAsE;AAC/D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC;AACA;AACA,WAAW,8BAA8B,kBAAkB;AAC3D;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,2DAA2D;AACpD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,WAAW,2CAA2C,kBAAkB;AACxE;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA,wBAAwB;AACjB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;AC7rBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,gEAAW;;AAEpC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,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mD;;;;;;;;;;;ACAA,mG;;;;;;;;;;;ACAA,qH;;;;;;;;;;;ACAA,sG;;;;;;;;;;;ACAA,2G;;;;;;;;;;;ACAA,gG;;;;;;;;;;;ACAA,2F;;;;;;;;;;;ACAA,2F;;;;;;;;;;;ACAA,0F;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,8C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/electron/index.ts\");\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2016, Lee Byron\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @ignore\n */\n\n/**\n * [Iterator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator)\n * is a *protocol* which describes a standard way to produce a sequence of\n * values, typically the values of the Iterable represented by this Iterator.\n *\n * While described by the [ES2015 version of JavaScript](http://www.ecma-international.org/ecma-262/6.0/#sec-iterator-interface)\n * it can be utilized by any version of JavaScript.\n *\n * @external Iterator\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator|MDN Iteration protocols}\n */\n\n/**\n * [Iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n * is a *protocol* which when implemented allows a JavaScript object to define\n * their iteration behavior, such as what values are looped over in a\n * [`for...of`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of)\n * loop or `iterall`'s `forEach` function. Many [built-in types](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#Builtin_iterables)\n * implement the Iterable protocol, including `Array` and `Map`.\n *\n * While described by the [ES2015 version of JavaScript](http://www.ecma-international.org/ecma-262/6.0/#sec-iterable-interface)\n * it can be utilized by any version of JavaScript.\n *\n * @external Iterable\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable|MDN Iteration protocols}\n */\n\n// In ES2015 environments, Symbol exists\nvar SYMBOL /*: any */ = typeof Symbol === 'function' ? Symbol : void 0\n\n// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\nvar SYMBOL_ITERATOR = SYMBOL && SYMBOL.iterator\n\n/**\n * A property name to be used as the name of an Iterable's method responsible\n * for producing an Iterator, referred to as `@@iterator`. Typically represents\n * the value `Symbol.iterator` but falls back to the string `\"@@iterator\"` when\n * `Symbol.iterator` is not defined.\n *\n * Use `$$iterator` for defining new Iterables instead of `Symbol.iterator`,\n * but do not use it for accessing existing Iterables, instead use\n * {@link getIterator} or {@link isIterable}.\n *\n * @example\n *\n * var $$iterator = require('iterall').$$iterator\n *\n * function Counter (to) {\n *   this.to = to\n * }\n *\n * Counter.prototype[$$iterator] = function () {\n *   return {\n *     to: this.to,\n *     num: 0,\n *     next () {\n *       if (this.num >= this.to) {\n *         return { value: undefined, done: true }\n *       }\n *       return { value: this.num++, done: false }\n *     }\n *   }\n * }\n *\n * var counter = new Counter(3)\n * for (var number of counter) {\n *   console.log(number) // 0 ... 1 ... 2\n * }\n *\n * @type {Symbol|string}\n */\n/*:: declare export var $$iterator: '@@iterator'; */\nexport var $$iterator = SYMBOL_ITERATOR || '@@iterator'\n\n/**\n * Returns true if the provided object implements the Iterator protocol via\n * either implementing a `Symbol.iterator` or `\"@@iterator\"` method.\n *\n * @example\n *\n * var isIterable = require('iterall').isIterable\n * isIterable([ 1, 2, 3 ]) // true\n * isIterable('ABC') // true\n * isIterable({ length: 1, 0: 'Alpha' }) // false\n * isIterable({ key: 'value' }) // false\n * isIterable(new Map()) // true\n *\n * @param obj\n *   A value which might implement the Iterable protocol.\n * @return {boolean} true if Iterable.\n */\n/*:: declare export function isIterable(obj: any): boolean; */\nexport function isIterable(obj) {\n  return !!getIteratorMethod(obj)\n}\n\n/**\n * Returns true if the provided object implements the Array-like protocol via\n * defining a positive-integer `length` property.\n *\n * @example\n *\n * var isArrayLike = require('iterall').isArrayLike\n * isArrayLike([ 1, 2, 3 ]) // true\n * isArrayLike('ABC') // true\n * isArrayLike({ length: 1, 0: 'Alpha' }) // true\n * isArrayLike({ key: 'value' }) // false\n * isArrayLike(new Map()) // false\n *\n * @param obj\n *   A value which might implement the Array-like protocol.\n * @return {boolean} true if Array-like.\n */\n/*:: declare export function isArrayLike(obj: any): boolean; */\nexport function isArrayLike(obj) {\n  var length = obj != null && obj.length\n  return typeof length === 'number' && length >= 0 && length % 1 === 0\n}\n\n/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and is either Iterable or Array-like.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if an\n * object should be iterated-over. It always excludes string literals and\n * includes Arrays (regardless of if it is Iterable). It also includes other\n * Array-like objects such as NodeList, TypedArray, and Buffer.\n *\n * @example\n *\n * var isCollection = require('iterall').isCollection\n * isCollection([ 1, 2, 3 ]) // true\n * isCollection('ABC') // false\n * isCollection({ length: 1, 0: 'Alpha' }) // true\n * isCollection({ key: 'value' }) // false\n * isCollection(new Map()) // true\n *\n * @example\n *\n * var forEach = require('iterall').forEach\n * if (isCollection(obj)) {\n *   forEach(obj, function (value) {\n *     console.log(value)\n *   })\n * }\n *\n * @param obj\n *   An Object value which might implement the Iterable or Array-like protocols.\n * @return {boolean} true if Iterable or Array-like Object.\n */\n/*:: declare export function isCollection(obj: any): boolean; */\nexport function isCollection(obj) {\n  return Object(obj) === obj && (isArrayLike(obj) || isIterable(obj))\n}\n\n/**\n * If the provided object implements the Iterator protocol, its Iterator object\n * is returned. Otherwise returns undefined.\n *\n * @example\n *\n * var getIterator = require('iterall').getIterator\n * var iterator = getIterator([ 1, 2, 3 ])\n * iterator.next() // { value: 1, done: false }\n * iterator.next() // { value: 2, done: false }\n * iterator.next() // { value: 3, done: false }\n * iterator.next() // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>} iterable\n *   An Iterable object which is the source of an Iterator.\n * @return {Iterator<T>} new Iterator instance.\n */\n/*:: declare export var getIterator:\n  & (<+TValue>(iterable: Iterable<TValue>) => Iterator<TValue>)\n  & ((iterable: mixed) => void | Iterator<mixed>); */\nexport function getIterator(iterable) {\n  var method = getIteratorMethod(iterable)\n  if (method) {\n    return method.call(iterable)\n  }\n}\n\n/**\n * If the provided object implements the Iterator protocol, the method\n * responsible for producing its Iterator object is returned.\n *\n * This is used in rare cases for performance tuning. This method must be called\n * with obj as the contextual this-argument.\n *\n * @example\n *\n * var getIteratorMethod = require('iterall').getIteratorMethod\n * var myArray = [ 1, 2, 3 ]\n * var method = getIteratorMethod(myArray)\n * if (method) {\n *   var iterator = method.call(myArray)\n * }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>} iterable\n *   An Iterable object which defines an `@@iterator` method.\n * @return {function(): Iterator<T>} `@@iterator` method.\n */\n/*:: declare export var getIteratorMethod:\n  & (<+TValue>(iterable: Iterable<TValue>) => (() => Iterator<TValue>))\n  & ((iterable: mixed) => (void | (() => Iterator<mixed>))); */\nexport function getIteratorMethod(iterable) {\n  if (iterable != null) {\n    var method =\n      (SYMBOL_ITERATOR && iterable[SYMBOL_ITERATOR]) || iterable['@@iterator']\n    if (typeof method === 'function') {\n      return method\n    }\n  }\n}\n\n/**\n * Similar to {@link getIterator}, this method returns a new Iterator given an\n * Iterable. However it will also create an Iterator for a non-Iterable\n * Array-like collection, such as Array in a non-ES2015 environment.\n *\n * `createIterator` is complimentary to `forEach`, but allows a \"pull\"-based\n * iteration as opposed to `forEach`'s \"push\"-based iteration.\n *\n * `createIterator` produces an Iterator for Array-likes with the same behavior\n * as ArrayIteratorPrototype described in the ECMAScript specification, and\n * does *not* skip over \"holes\".\n *\n * @example\n *\n * var createIterator = require('iterall').createIterator\n *\n * var myArraylike = { length: 3, 0: 'Alpha', 1: 'Bravo', 2: 'Charlie' }\n * var iterator = createIterator(myArraylike)\n * iterator.next() // { value: 'Alpha', done: false }\n * iterator.next() // { value: 'Bravo', done: false }\n * iterator.next() // { value: 'Charlie', done: false }\n * iterator.next() // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>|{ length: number }} collection\n *   An Iterable or Array-like object to produce an Iterator.\n * @return {Iterator<T>} new Iterator instance.\n */\n/*:: declare export var createIterator:\n  & (<+TValue>(collection: Iterable<TValue>) => Iterator<TValue>)\n  & ((collection: {length: number}) => Iterator<mixed>)\n  & ((collection: mixed) => (void | Iterator<mixed>)); */\nexport function createIterator(collection) {\n  if (collection != null) {\n    var iterator = getIterator(collection)\n    if (iterator) {\n      return iterator\n    }\n    if (isArrayLike(collection)) {\n      return new ArrayLikeIterator(collection)\n    }\n  }\n}\n\n// When the object provided to `createIterator` is not Iterable but is\n// Array-like, this simple Iterator is created.\nfunction ArrayLikeIterator(obj) {\n  this._o = obj\n  this._i = 0\n}\n\n// Note: all Iterators are themselves Iterable.\nArrayLikeIterator.prototype[$$iterator] = function() {\n  return this\n}\n\n// A simple state-machine determines the IteratorResult returned, yielding\n// each value in the Array-like object in order of their indicies.\nArrayLikeIterator.prototype.next = function() {\n  if (this._o === void 0 || this._i >= this._o.length) {\n    this._o = void 0\n    return { value: void 0, done: true }\n  }\n  return { value: this._o[this._i++], done: false }\n}\n\n/**\n * Given an object which either implements the Iterable protocol or is\n * Array-like, iterate over it, calling the `callback` at each iteration.\n *\n * Use `forEach` where you would expect to use a `for ... of` loop in ES6.\n * However `forEach` adheres to the behavior of [Array#forEach][] described in\n * the ECMAScript specification, skipping over \"holes\" in Array-likes. It will\n * also delegate to a `forEach` method on `collection` if one is defined,\n * ensuring native performance for `Arrays`.\n *\n * Similar to [Array#forEach][], the `callback` function accepts three\n * arguments, and is provided with `thisArg` as the calling context.\n *\n * Note: providing an infinite Iterator to forEach will produce an error.\n *\n * [Array#forEach]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n *\n * @example\n *\n * var forEach = require('iterall').forEach\n *\n * forEach(myIterable, function (value, index, iterable) {\n *   console.log(value, index, iterable === myIterable)\n * })\n *\n * @example\n *\n * // ES6:\n * for (let value of myIterable) {\n *   console.log(value)\n * }\n *\n * // Any JavaScript environment:\n * forEach(myIterable, function (value) {\n *   console.log(value)\n * })\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>|{ length: number }} collection\n *   The Iterable or array to iterate over.\n * @param {function(T, number, object)} callback\n *   Function to execute for each iteration, taking up to three arguments\n * @param [thisArg]\n *   Optional. Value to use as `this` when executing `callback`.\n */\n/*:: declare export var forEach:\n  & (<+TValue, TCollection: Iterable<TValue>>(\n      collection: TCollection,\n      callbackFn: (value: TValue, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => void)\n  & (<TCollection: {length: number}>(\n      collection: TCollection,\n      callbackFn: (value: mixed, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => void); */\nexport function forEach(collection, callback, thisArg) {\n  if (collection != null) {\n    if (typeof collection.forEach === 'function') {\n      return collection.forEach(callback, thisArg)\n    }\n    var i = 0\n    var iterator = getIterator(collection)\n    if (iterator) {\n      var step\n      while (!(step = iterator.next()).done) {\n        callback.call(thisArg, step.value, i++, collection)\n        // Infinite Iterators could cause forEach to run forever.\n        // After a very large number of iterations, produce an error.\n        /* istanbul ignore if */\n        if (i > 9999999) {\n          throw new TypeError('Near-infinite iteration.')\n        }\n      }\n    } else if (isArrayLike(collection)) {\n      for (; i < collection.length; i++) {\n        if (collection.hasOwnProperty(i)) {\n          callback.call(thisArg, collection[i], i, collection)\n        }\n      }\n    }\n  }\n}\n\n/////////////////////////////////////////////////////\n//                                                 //\n//                 ASYNC ITERATORS                 //\n//                                                 //\n/////////////////////////////////////////////////////\n\n/**\n * [AsyncIterable](https://tc39.github.io/proposal-async-iteration/#sec-asynciterable-interface)\n * is a *protocol* which when implemented allows a JavaScript object to define\n * an asynchronous iteration behavior, such as what values are looped over in\n * a [`for-await-of`](https://tc39.github.io/proposal-async-iteration/#sec-for-in-and-for-of-statements)\n * loop or `iterall`'s {@link forAwaitEach} function.\n *\n * While described as a proposed addition to the [ES2017 version of JavaScript](https://tc39.github.io/proposal-async-iteration/)\n * it can be utilized by any version of JavaScript.\n *\n * @external AsyncIterable\n * @see {@link https://tc39.github.io/proposal-async-iteration/#sec-asynciterable-interface|Async Iteration Proposal}\n * @template T The type of each iterated value\n * @property {function (): AsyncIterator<T>} Symbol.asyncIterator\n *   A method which produces an AsyncIterator for this AsyncIterable.\n */\n\n/**\n * [AsyncIterator](https://tc39.github.io/proposal-async-iteration/#sec-asynciterator-interface)\n * is a *protocol* which describes a standard way to produce and consume an\n * asynchronous sequence of values, typically the values of the\n * {@link AsyncIterable} represented by this {@link AsyncIterator}.\n *\n * AsyncIterator is similar to Observable or Stream. Like an {@link Iterator} it\n * also as a `next()` method, however instead of an IteratorResult,\n * calling this method returns a {@link Promise} for a IteratorResult.\n *\n * While described as a proposed addition to the [ES2017 version of JavaScript](https://tc39.github.io/proposal-async-iteration/)\n * it can be utilized by any version of JavaScript.\n *\n * @external AsyncIterator\n * @see {@link https://tc39.github.io/proposal-async-iteration/#sec-asynciterator-interface|Async Iteration Proposal}\n */\n\n// In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\nvar SYMBOL_ASYNC_ITERATOR = SYMBOL && SYMBOL.asyncIterator\n\n/**\n * A property name to be used as the name of an AsyncIterable's method\n * responsible for producing an Iterator, referred to as `@@asyncIterator`.\n * Typically represents the value `Symbol.asyncIterator` but falls back to the\n * string `\"@@asyncIterator\"` when `Symbol.asyncIterator` is not defined.\n *\n * Use `$$asyncIterator` for defining new AsyncIterables instead of\n * `Symbol.asyncIterator`, but do not use it for accessing existing Iterables,\n * instead use {@link getAsyncIterator} or {@link isAsyncIterable}.\n *\n * @example\n *\n * var $$asyncIterator = require('iterall').$$asyncIterator\n *\n * function Chirper (to) {\n *   this.to = to\n * }\n *\n * Chirper.prototype[$$asyncIterator] = function () {\n *   return {\n *     to: this.to,\n *     num: 0,\n *     next () {\n *       return new Promise(resolve => {\n *         if (this.num >= this.to) {\n *           resolve({ value: undefined, done: true })\n *         } else {\n *           setTimeout(() => {\n *             resolve({ value: this.num++, done: false })\n *           }, 1000)\n *         }\n *       })\n *     }\n *   }\n * }\n *\n * var chirper = new Chirper(3)\n * for await (var number of chirper) {\n *   console.log(number) // 0 ...wait... 1 ...wait... 2\n * }\n *\n * @type {Symbol|string}\n */\n/*:: declare export var $$asyncIterator: '@@asyncIterator'; */\nexport var $$asyncIterator = SYMBOL_ASYNC_ITERATOR || '@@asyncIterator'\n\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * either implementing a `Symbol.asyncIterator` or `\"@@asyncIterator\"` method.\n *\n * @example\n *\n * var isAsyncIterable = require('iterall').isAsyncIterable\n * isAsyncIterable(myStream) // true\n * isAsyncIterable('ABC') // false\n *\n * @param obj\n *   A value which might implement the AsyncIterable protocol.\n * @return {boolean} true if AsyncIterable.\n */\n/*:: declare export function isAsyncIterable(obj: any): boolean; */\nexport function isAsyncIterable(obj) {\n  return !!getAsyncIteratorMethod(obj)\n}\n\n/**\n * If the provided object implements the AsyncIterator protocol, its\n * AsyncIterator object is returned. Otherwise returns undefined.\n *\n * @example\n *\n * var getAsyncIterator = require('iterall').getAsyncIterator\n * var asyncIterator = getAsyncIterator(myStream)\n * asyncIterator.next().then(console.log) // { value: 1, done: false }\n * asyncIterator.next().then(console.log) // { value: 2, done: false }\n * asyncIterator.next().then(console.log) // { value: 3, done: false }\n * asyncIterator.next().then(console.log) // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>} asyncIterable\n *   An AsyncIterable object which is the source of an AsyncIterator.\n * @return {AsyncIterator<T>} new AsyncIterator instance.\n */\n/*:: declare export var getAsyncIterator:\n  & (<+TValue>(asyncIterable: AsyncIterable<TValue>) => AsyncIterator<TValue>)\n  & ((asyncIterable: mixed) => (void | AsyncIterator<mixed>)); */\nexport function getAsyncIterator(asyncIterable) {\n  var method = getAsyncIteratorMethod(asyncIterable)\n  if (method) {\n    return method.call(asyncIterable)\n  }\n}\n\n/**\n * If the provided object implements the AsyncIterator protocol, the method\n * responsible for producing its AsyncIterator object is returned.\n *\n * This is used in rare cases for performance tuning. This method must be called\n * with obj as the contextual this-argument.\n *\n * @example\n *\n * var getAsyncIteratorMethod = require('iterall').getAsyncIteratorMethod\n * var method = getAsyncIteratorMethod(myStream)\n * if (method) {\n *   var asyncIterator = method.call(myStream)\n * }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>} asyncIterable\n *   An AsyncIterable object which defines an `@@asyncIterator` method.\n * @return {function(): AsyncIterator<T>} `@@asyncIterator` method.\n */\n/*:: declare export var getAsyncIteratorMethod:\n  & (<+TValue>(asyncIterable: AsyncIterable<TValue>) => (() => AsyncIterator<TValue>))\n  & ((asyncIterable: mixed) => (void | (() => AsyncIterator<mixed>))); */\nexport function getAsyncIteratorMethod(asyncIterable) {\n  if (asyncIterable != null) {\n    var method =\n      (SYMBOL_ASYNC_ITERATOR && asyncIterable[SYMBOL_ASYNC_ITERATOR]) ||\n      asyncIterable['@@asyncIterator']\n    if (typeof method === 'function') {\n      return method\n    }\n  }\n}\n\n/**\n * Similar to {@link getAsyncIterator}, this method returns a new AsyncIterator\n * given an AsyncIterable. However it will also create an AsyncIterator for a\n * non-async Iterable as well as non-Iterable Array-like collection, such as\n * Array in a pre-ES2015 environment.\n *\n * `createAsyncIterator` is complimentary to `forAwaitEach`, but allows a\n * buffering \"pull\"-based iteration as opposed to `forAwaitEach`'s\n * \"push\"-based iteration.\n *\n * `createAsyncIterator` produces an AsyncIterator for non-async Iterables as\n * described in the ECMAScript proposal [Async-from-Sync Iterator Objects](https://tc39.github.io/proposal-async-iteration/#sec-async-from-sync-iterator-objects).\n *\n * > Note: Creating `AsyncIterator`s requires the existence of `Promise`.\n * > While `Promise` has been available in modern browsers for a number of\n * > years, legacy browsers (like IE 11) may require a polyfill.\n *\n * @example\n *\n * var createAsyncIterator = require('iterall').createAsyncIterator\n *\n * var myArraylike = { length: 3, 0: 'Alpha', 1: 'Bravo', 2: 'Charlie' }\n * var iterator = createAsyncIterator(myArraylike)\n * iterator.next().then(console.log) // { value: 'Alpha', done: false }\n * iterator.next().then(console.log) // { value: 'Bravo', done: false }\n * iterator.next().then(console.log) // { value: 'Charlie', done: false }\n * iterator.next().then(console.log) // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>|Iterable<T>|{ length: number }} source\n *   An AsyncIterable, Iterable, or Array-like object to produce an Iterator.\n * @return {AsyncIterator<T>} new AsyncIterator instance.\n */\n/*:: declare export var createAsyncIterator:\n  & (<+TValue>(\n      collection: Iterable<Promise<TValue> | TValue> | AsyncIterable<TValue>\n    ) => AsyncIterator<TValue>)\n  & ((collection: {length: number}) => AsyncIterator<mixed>)\n  & ((collection: mixed) => (void | AsyncIterator<mixed>)); */\nexport function createAsyncIterator(source) {\n  if (source != null) {\n    var asyncIterator = getAsyncIterator(source)\n    if (asyncIterator) {\n      return asyncIterator\n    }\n    var iterator = createIterator(source)\n    if (iterator) {\n      return new AsyncFromSyncIterator(iterator)\n    }\n  }\n}\n\n// When the object provided to `createAsyncIterator` is not AsyncIterable but is\n// sync Iterable, this simple wrapper is created.\nfunction AsyncFromSyncIterator(iterator) {\n  this._i = iterator\n}\n\n// Note: all AsyncIterators are themselves AsyncIterable.\nAsyncFromSyncIterator.prototype[$$asyncIterator] = function() {\n  return this\n}\n\n// A simple state-machine determines the IteratorResult returned, yielding\n// each value in the Array-like object in order of their indicies.\nAsyncFromSyncIterator.prototype.next = function() {\n  var step = this._i.next()\n  return Promise.resolve(step.value).then(function(value) {\n    return { value: value, done: step.done }\n  })\n}\n\n/**\n * Given an object which either implements the AsyncIterable protocol or is\n * Array-like, iterate over it, calling the `callback` at each iteration.\n *\n * Use `forAwaitEach` where you would expect to use a [for-await-of](https://tc39.github.io/proposal-async-iteration/#sec-for-in-and-for-of-statements) loop.\n *\n * Similar to [Array#forEach][], the `callback` function accepts three\n * arguments, and is provided with `thisArg` as the calling context.\n *\n * > Note: Using `forAwaitEach` requires the existence of `Promise`.\n * > While `Promise` has been available in modern browsers for a number of\n * > years, legacy browsers (like IE 11) may require a polyfill.\n *\n * @example\n *\n * var forAwaitEach = require('iterall').forAwaitEach\n *\n * forAwaitEach(myIterable, function (value, index, iterable) {\n *   console.log(value, index, iterable === myIterable)\n * })\n *\n * @example\n *\n * // ES2017:\n * for await (let value of myAsyncIterable) {\n *   console.log(await doSomethingAsync(value))\n * }\n * console.log('done')\n *\n * // Any JavaScript environment:\n * forAwaitEach(myAsyncIterable, function (value) {\n *   return doSomethingAsync(value).then(console.log)\n * }).then(function () {\n *   console.log('done')\n * })\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>|Iterable<Promise<T> | T>|{ length: number }} source\n *   The AsyncIterable or array to iterate over.\n * @param {function(T, number, object)} callback\n *   Function to execute for each iteration, taking up to three arguments\n * @param [thisArg]\n *   Optional. Value to use as `this` when executing `callback`.\n */\n/*:: declare export var forAwaitEach:\n  & (<+TValue, TCollection: Iterable<Promise<TValue> | TValue> | AsyncIterable<TValue>>(\n      collection: TCollection,\n      callbackFn: (value: TValue, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => Promise<void>)\n  & (<TCollection: { length: number }>(\n      collection: TCollection,\n      callbackFn: (value: mixed, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => Promise<void>); */\nexport function forAwaitEach(source, callback, thisArg) {\n  var asyncIterator = createAsyncIterator(source)\n  if (asyncIterator) {\n    var i = 0\n    return new Promise(function(resolve, reject) {\n      function next() {\n        asyncIterator\n          .next()\n          .then(function(step) {\n            if (!step.done) {\n              Promise.resolve(callback.call(thisArg, step.value, i++, source))\n                .then(next)\n                .catch(reject)\n            } else {\n              resolve()\n            }\n            // Explicitly return null, silencing bluebird-style warnings.\n            return null\n          })\n          .catch(reject)\n        // Explicitly return null, silencing bluebird-style warnings.\n        return null\n      }\n      next()\n    })\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","import { schema } from '~/shared/graphql/schema';\nimport { createContext } from '~/shared/graphql/schema/context';\nimport { getEnvironment, getWallet } from '~/shared/graphql/schema/environment';\nimport { createIpcExecutor, createSchemaLink } from '~/shared/graphql/server';\nimport { ipcMain } from 'electron';\n\nexport default async () => {\n  const environment = await getEnvironment();\n  const wallet = await getWallet();\n  const context = await createContext(environment, wallet);\n  const link = createSchemaLink({ schema, context });\n  return createIpcExecutor({ link, ipc: ipcMain });\n};\n","import electron from 'electron';\nimport isDev from 'electron-is-dev';\nimport http from 'http';\nimport path from 'path';\nimport url from 'url';\nimport setupGql from './graphql';\n\nconst isWindows = process.platform === 'win32';\n\nif (isDev) {\n  require('electron-debug')({ enabled: true, showDevTools: true });\n}\n\nlet mainWindow;\nconst restoreMainWindow = async () => {\n  await setupGql();\n\n  // Create the application's main menu.\n  electron.Menu.setApplicationMenu(\n    electron.Menu.buildFromTemplate([\n      {\n        label: 'Application',\n        submenu: [\n          {\n            label: 'Quit',\n            accelerator: 'Command+Q',\n            click: () => {\n              electron.app.quit();\n            },\n          },\n        ],\n      },\n      {\n        label: 'Edit',\n        submenu: [\n          { label: 'Cut', accelerator: 'CmdOrCtrl+X', selector: 'cut:' },\n          { label: 'Copy', accelerator: 'CmdOrCtrl+C', selector: 'copy:' },\n          { label: 'Paste', accelerator: 'CmdOrCtrl+V', selector: 'paste:' },\n        ],\n      },\n    ]),\n  );\n\n  mainWindow = new electron.BrowserWindow({\n    width: 1024,\n    height: 800,\n    webPreferences: {\n      nodeIntegration: !!isDev,\n      preload: path.resolve(__dirname, 'preload.js'),\n    },\n  });\n\n  const handleRedirect = (event, url) => {\n    if (url !== mainWindow.webContents.getURL()) {\n      event.preventDefault();\n      electron.shell.openExternal(url);\n    }\n  };\n\n  mainWindow.webContents.on('will-navigate', handleRedirect);\n  mainWindow.webContents.on('new-window', handleRedirect);\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n\n  if (isDev) {\n    // Do not load next in the production build.\n    const next = require('next')({ dev: true, dir: './src' });\n    const requestHandler = next.getRequestHandler();\n\n    // Build the renderer code and watch the files.\n    await next.prepare();\n\n    // Start the http server (with hot code reloading).\n    await new Promise(resolve => {\n      const server = http.createServer(requestHandler);\n\n      server.listen(3000, () => {\n        // Make sure to stop the server when the app closes.\n        electron.app.on('before-quit', () => server.close());\n\n        resolve();\n      });\n    });\n\n    mainWindow.loadURL('http://localhost:3000/');\n  } else {\n    const appUrl = url.format({\n      pathname: 'index.html',\n      protocol: 'file:',\n      slashes: true,\n    });\n\n    mainWindow.loadURL(appUrl);\n  }\n};\n\nelectron.app.on('window-all-closed', () => {\n  electron.app.quit();\n});\n\nelectron.app.on('activate', () => {\n  if (!mainWindow) {\n    restoreMainWindow();\n  }\n});\n\nelectron.app.on('ready', () => {\n  if (!isDev) {\n    electron.protocol.interceptFileProtocol('file', (request, callback) => {\n      const reqUrl = request.url.substr(isWindows ? 8 : 7);\n      const reqUrlFinal = isWindows\n        ? reqUrl.replace(path.parse(reqUrl).root, '')\n        : reqUrl;\n\n      callback(path.normalize(path.join(__dirname, 'renderer', reqUrlFinal)));\n    });\n  } else {\n    const {\n      default: install,\n      REACT_DEVELOPER_TOOLS,\n      REDUX_DEVTOOLS,\n    } = require('electron-devtools-installer');\n\n    install(REACT_DEVELOPER_TOOLS)\n      .then(name => console.log(`Added Extension:  ${name}`))\n      .catch(error => console.error('An error occurred: ', error));\n\n    install(REDUX_DEVTOOLS)\n      .then(name => console.log(`Added Extension:  ${name}`))\n      .catch(error => console.error('An error occurred: ', error));\n\n    require('devtron').install();\n  }\n\n  restoreMainWindow();\n});\n","import { publishReplay } from 'rxjs/operators';\nimport createLoaders from './loaders';\nimport subscribeBlock from './utils/subscribeBlock';\nimport currentRanking from './utils/currentRanking';\nimport subscribeSyncing from './utils/subscribeSyncing';\nimport hasRecentPrice from './utils/hasRecentPrice';\nimport currentPeers from './utils/currentPeers';\n\nexport async function createContext(environment, wallet = null) {\n  // The current wallet (in an electron context);\n  let currentWallet = wallet;\n\n  const block$ = subscribeBlock(environment).pipe(publishReplay(1));\n  const syncing$ = subscribeSyncing(environment).pipe(publishReplay(1));\n  const peers$ = currentPeers(environment, block$).pipe(publishReplay(1));\n  const ranking$ = currentRanking(environment, block$).pipe(publishReplay(1));\n  const recentPrice$ = hasRecentPrice(environment, block$).pipe(\n    publishReplay(1),\n  );\n\n  const streams = {\n    peers$,\n    block$,\n    ranking$,\n    syncing$,\n    recentPrice$,\n  };\n\n  Object.values(streams).forEach(stream$ => stream$.connect());\n\n  return () => ({\n    environment,\n    streams,\n    loaders: {\n      setWallet: value => {\n        currentWallet = value;\n      },\n      getWallet: () => {\n        return currentWallet;\n      },\n      ...createLoaders(environment, streams),\n    },\n  });\n}\n","import { forEachField } from 'graphql-tools';\nimport { defaultFieldResolver } from 'graphql';\nimport { getDirectiveValues } from 'graphql/execution';\nimport * as graphqlLanguage from 'graphql/language';\n\nconst DirectiveLocation = graphqlLanguage.DirectiveLocation;\n\nfunction getFieldResolver(field) {\n  const resolver = field.resolve || defaultFieldResolver;\n  return resolver.bind(field);\n}\n\nfunction getDirectiveInfo(directive, resolverMap, schema, location, variables) {\n  const name = directive.name.value;\n  const Directive = schema.getDirective(name);\n  if (typeof Directive === 'undefined') {\n    throw new Error(\n      `Directive @${name} is undefined. ` +\n        'Please define in schema before using.',\n    );\n  }\n\n  if (!Directive.locations.includes(location)) {\n    throw new Error(\n      `Directive @${name} is not marked to be used on \"${location}\" location. ` +\n        `Please add \"directive @${name} ON ${location}\" in schema.`,\n    );\n  }\n\n  const resolver = resolverMap[name];\n  const args = getDirectiveValues(\n    Directive,\n    { directives: [directive] },\n    variables,\n  );\n  return { args, resolver };\n}\n\nfunction createFieldResolver(field, resolverMap, schema) {\n  const originalResolver = getFieldResolver(field);\n  return (source, args, context, info) => {\n    const { directives } = info.fieldNodes[0] || [];\n    const resolvers = directives\n      .map(directive => {\n        const directiveInfo = getDirectiveInfo(\n          directive,\n          resolverMap,\n          schema,\n          DirectiveLocation.FIELD,\n          info.variableValues,\n        );\n\n        return directiveInfo;\n      })\n      .filter(directive => typeof directive.resolver !== 'undefined');\n\n    if (!resolvers.length) {\n      return originalResolver(source, args, context, info);\n    }\n\n    const chain = resolvers.reduce((carry, current) => {\n      return (parent, args, context, info) => {\n        return current.resolver(\n          carry,\n          parent,\n          args,\n          context,\n          info,\n          current.args,\n        );\n      };\n    }, originalResolver);\n\n    return chain(source, args, context, info);\n  };\n}\n\nfunction addQueryDirectives(schema, resolverMap) {\n  if (typeof resolverMap !== 'object') {\n    throw new Error(\n      `Expected resolverMap to be of type object, got ${typeof resolverMap}`,\n    );\n  }\n\n  if (Array.isArray(resolverMap)) {\n    throw new Error('Expected resolverMap to be of type object, got Array');\n  }\n\n  forEachField(schema, field => {\n    field.resolve = createFieldResolver(field, resolverMap, schema);\n  });\n}\n\nexport default addQueryDirectives;\n","import path from 'path';\nimport fs from 'fs';\nimport Wallet from 'ethers-wallet';\nimport Ganache from '@melonproject/ganache-cli';\nimport * as Tm from '@melonproject/token-math';\nimport {\n  getTokenBySymbol,\n  constructEnvironment,\n  deployThirdParty,\n  deploySystem,\n  deployAllContractsConfig,\n  update,\n} from '@melonproject/protocol';\nimport { makeOrderFromAccountOasisDex } from '@melonproject/protocol/lib/contracts/exchanges/transactions/makeOrderFromAccountOasisDex';\nimport Web3Accounts from 'web3-eth-accounts';\n\nconst mnemonic =\n  'exhibit now news planet fame thank swear reform tilt accident bitter axis';\n\nconst getTestEnvironment = async (track: string) => {\n  const chainPath = path.resolve(process.cwd(), '.chain');\n  const databasePath = path.join(chainPath, 'db');\n\n  if (!fs.existsSync(chainPath)) {\n    fs.mkdirSync(chainPath);\n    fs.mkdirSync(databasePath);\n  }\n\n  const provider = Ganache.provider({\n    gasLimit: '0x7a1200',\n    default_balance_ether: 10000000000000,\n    // db_path: path.resolve(__dirname, '.chain'),\n    total_accounts: 10,\n    mnemonic,\n    logger: console,\n    db_path: databasePath,\n  });\n\n  const deploymentPath = path.join(chainPath, 'deployment.json');\n  const environment = constructEnvironment({\n    provider,\n    track,\n    deployment:\n      fs.existsSync(deploymentPath) &&\n      JSON.parse(fs.readFileSync(deploymentPath).toString()),\n  });\n\n  if (environment && environment.deployment) {\n    return environment;\n  }\n\n  const wallet = Wallet.Wallet.fromMnemonic(mnemonic);\n  const accounts = new Web3Accounts(environment.eth.currentProvider);\n  const signTransaction = transaction =>\n    accounts\n      .signTransaction(transaction, wallet.privateKey)\n      .then(t => t.rawTransaction);\n\n  const withWallet = {\n    ...environment,\n    wallet: {\n      ...wallet,\n      signTransaction,\n    },\n  };\n\n  const thirdParty = await deployThirdParty(withWallet);\n  const withDeployment = await deploySystem(\n    withWallet,\n    thirdParty,\n    deployAllContractsConfig,\n  );\n\n  fs.writeFileSync(deploymentPath, JSON.stringify(withDeployment.deployment));\n\n  const { melonContracts } = withDeployment.deployment;\n  const { priceSource } = melonContracts;\n  const wethToken = getTokenBySymbol(withDeployment, 'WETH');\n  const mlnToken = getTokenBySymbol(withDeployment, 'MLN');\n\n  const mlnPrice = Tm.createPrice(\n    Tm.createQuantity(mlnToken, '1'),\n    Tm.createQuantity(wethToken, '2'),\n  );\n\n  const ethPrice = Tm.createPrice(\n    Tm.createQuantity(wethToken, '1'),\n    Tm.createQuantity(wethToken, '1'),\n  );\n\n  await update(withDeployment, priceSource, [ethPrice, mlnPrice]);\n\n  const matchingMarketAddress =\n    withDeployment.deployment.exchangeConfigs.MatchingMarket.exchange;\n\n  await makeOrderFromAccountOasisDex(withDeployment, matchingMarketAddress, {\n    buy: Tm.createQuantity(mlnToken, 1),\n    sell: Tm.createQuantity(wethToken, 1),\n  });\n\n  await makeOrderFromAccountOasisDex(withDeployment, matchingMarketAddress, {\n    buy: Tm.createQuantity(mlnToken, 2),\n    sell: Tm.createQuantity(wethToken, 1),\n  });\n\n  await makeOrderFromAccountOasisDex(withDeployment, matchingMarketAddress, {\n    buy: Tm.createQuantity(mlnToken, 3),\n    sell: Tm.createQuantity(wethToken, 1),\n  });\n\n  await makeOrderFromAccountOasisDex(withDeployment, matchingMarketAddress, {\n    buy: Tm.createQuantity(mlnToken, 4),\n    sell: Tm.createQuantity(wethToken, 1),\n  });\n\n  await makeOrderFromAccountOasisDex(withDeployment, matchingMarketAddress, {\n    buy: Tm.createQuantity(mlnToken, 6.5),\n    sell: Tm.createQuantity(wethToken, 1),\n  });\n\n  await makeOrderFromAccountOasisDex(withDeployment, matchingMarketAddress, {\n    buy: Tm.createQuantity(mlnToken, 3.7),\n    sell: Tm.createQuantity(wethToken, 1),\n  });\n\n  await makeOrderFromAccountOasisDex(withDeployment, matchingMarketAddress, {\n    buy: Tm.createQuantity(wethToken, 2),\n    sell: Tm.createQuantity(mlnToken, 1),\n  });\n\n  await makeOrderFromAccountOasisDex(withDeployment, matchingMarketAddress, {\n    buy: Tm.createQuantity(wethToken, 3),\n    sell: Tm.createQuantity(mlnToken, 1),\n  });\n\n  await makeOrderFromAccountOasisDex(withDeployment, matchingMarketAddress, {\n    buy: Tm.createQuantity(wethToken, 3.5),\n    sell: Tm.createQuantity(mlnToken, 1),\n  });\n\n  return {\n    ...environment,\n    deployment: withDeployment.deployment,\n  };\n};\n\nexport const getEnvironment = async () => {\n  const track = process.env.TRACK;\n  const environment = await getTestEnvironment(track);\n  return environment;\n};\n\nexport const getWallet = async () => {\n  // Automatically log in to a wallet. Useful for development.\n  const wallet =\n    process.env.NODE_ENV === 'development'\n      ? Wallet.Wallet.fromMnemonic(mnemonic)\n      : null;\n\n  return wallet;\n};\n","import { makeExecutableSchema } from 'graphql-tools';\nimport Accounts from 'web3-eth-accounts';\nimport resolvers from './resolvers';\nimport addQueryDirectives from './directives/addQueryDirectives';\nimport * as typeDefs from './schema.gql';\n\nexport const schema = makeExecutableSchema({\n  typeDefs,\n  resolvers,\n  inheritResolversFromInterfaces: true,\n});\n\naddQueryDirectives(schema, {\n  sign: async (resolve, source, args, context, info, directiveArgs) => {\n    if (typeof args[directiveArgs.target] !== 'undefined') {\n      // The transaction is already signed.\n      return resolve(source, args, context, info);\n    }\n\n    const { environment, loaders } = context;\n    const wallet = loaders.getWallet();\n    const accounts = new Accounts(environment.eth.currentProvider);\n    const unsigned = args[directiveArgs.source];\n    const signed = await accounts.signTransaction(\n      unsigned,\n      wallet && wallet.privateKey,\n    );\n\n    const newArgs = {\n      ...args,\n      [directiveArgs.target]: signed,\n    };\n\n    return resolve(source, newArgs, context, info);\n  },\n  account: (resolve, source, args, context, info, directiveArgs) => {\n    const account =\n      args[directiveArgs.arg] ||\n      (() => {\n        const wallet = context.loaders.getWallet();\n        return (wallet && wallet.address) || undefined;\n      })();\n\n    const newArgs = {\n      ...args,\n      [directiveArgs.arg]: account,\n    };\n\n    return resolve(source, newArgs, context, info);\n  },\n});\n","import DataLoader from 'dataloader';\nimport memoizeOne from 'memoize-one';\nimport * as R from 'ramda';\nimport { pluck, map } from 'rxjs/operators';\nimport takeLast from './utils/takeLast';\nimport importWallet from './loaders/wallet/decryptWallet';\nimport restoreWallet from './loaders/wallet/restoreWallet';\nimport generateMnemonic from './loaders/wallet/generateMnemonic';\nimport getFundInception from './loaders/fund/fundInception';\nimport getFundOwner from './loaders/fund/fundOwner';\nimport getFundName from './loaders/fund/fundName';\nimport getFundRoutes from './loaders/fund/fundRoutes';\nimport getFundHoldings from './loaders/fund/fundHoldings';\nimport getFundDenominationAsset from './loaders/fund/fundDenominationAsset';\nimport getFundNativeAsset from './loaders/fund/fundNativeAsset';\nimport getFundTotalSupply from './loaders/fund/fundTotalSupply';\nimport getFundCalculations from './loaders/fund/fundCalculations';\nimport getFundAddressFromManager from './loaders/fund/fundAddressFromManager';\nimport getFundIsShutdown from './loaders/fund/fundIsShutdown';\nimport getFundParticipation from './loaders/fund/fundParticipation';\nimport getQuoteToken from './loaders/quoteToken';\nimport getAssetPrice from './loaders/assetPrice';\nimport getExchangeOrders from './loaders/exchangeOrders';\nimport getFundIsComplete from './loaders/fund/fundIsComplete';\nimport getSymbolBalance from './loaders/symbolBalance';\nimport getSymbolBalanceObservable from './loaders/symbolBalanceObservable';\nimport resolveNetwork from './utils/resolveNetwork';\nimport getRoutes from './loaders/routes';\n\nexport default (environment, streams) => {\n  const fundIsComplete = new DataLoader(addresses => {\n    const fn = getFundIsComplete(environment);\n    return Promise.all(addresses.map(fn) || []);\n  });\n\n  const fundAddressFromManager = new DataLoader(addresses => {\n    const fn = getFundAddressFromManager(environment);\n    return Promise.all(addresses.map(fn) || []);\n  });\n\n  const routes = new DataLoader(addresses => {\n    const fn = getRoutes(environment);\n    return Promise.all(addresses.map(fn) || []);\n  });\n\n  const fundName = new DataLoader(addresses => {\n    const fn = getFundName(environment);\n    return Promise.all(addresses.map(fn) || []);\n  });\n\n  const fundDenominationAsset = new DataLoader(async addresses => {\n    const routes = await fundRoutes.loadMany(addresses);\n    return Promise.all(\n      addresses.map((address, key) => {\n        const { accountingAddress } = routes[key] || {\n          accountingAddress: null,\n        };\n\n        return (\n          accountingAddress &&\n          getFundDenominationAsset(environment, accountingAddress)\n        );\n      }),\n    );\n  });\n\n  const fundNativeAsset = new DataLoader(async addresses => {\n    const routes = await fundRoutes.loadMany(addresses);\n    return Promise.all(\n      addresses.map((address, key) => {\n        const { accountingAddress } = routes[key] || {\n          accountingAddress: null,\n        };\n\n        return (\n          accountingAddress &&\n          getFundNativeAsset(environment, accountingAddress)\n        );\n      }),\n    );\n  });\n\n  const fundReady = new DataLoader(async addresses => {\n    const routes = await fundRoutes.loadMany(addresses);\n    return Promise.all(\n      addresses.map((address, key) => {\n        return !!(routes && routes[key]);\n      }),\n    );\n  });\n\n  const fundOwner = new DataLoader(addresses => {\n    const fn = getFundOwner(environment);\n    return Promise.all(addresses.map(fn) || []);\n  });\n\n  const fundRoutes = new DataLoader(addresses => {\n    const fn = getFundRoutes(environment);\n    return Promise.all(addresses.map(fn) || []);\n  });\n\n  const fundTotalSupply = new DataLoader(async addresses => {\n    const routes = await fundRoutes.loadMany(addresses);\n    return Promise.all(\n      addresses.map((address, key) => {\n        const { sharesAddress } = routes[key] || {\n          sharesAddress: null,\n        };\n\n        return sharesAddress && getFundTotalSupply(environment, sharesAddress);\n      }),\n    );\n  });\n\n  const fundRank = new DataLoader(async addresses => {\n    const ranking = (await takeLast(streams.ranking$)) || [];\n    return Promise.all(\n      addresses.map(address => {\n        const entry = R.find(R.propEq('address', address), ranking);\n        return R.propOr(0, 'rank', entry);\n      }),\n    );\n  });\n\n  const fundInception = new DataLoader(addresses => {\n    const fn = getFundInception(environment);\n    return Promise.all(addresses.map(fn) || []);\n  });\n\n  const fundCalculations = new DataLoader(async addresses => {\n    const routes = await fundRoutes.loadMany(addresses);\n    return Promise.all(\n      addresses.map((address, key) => {\n        const { accountingAddress } = routes[key] || {\n          accountingAddress: null,\n        };\n\n        return (\n          accountingAddress &&\n          getFundCalculations(environment, accountingAddress)\n        );\n      }),\n    );\n  });\n\n  const fundHoldings = new DataLoader(async addresses => {\n    const routes = await fundRoutes.loadMany(addresses);\n    return Promise.all(\n      addresses.map((address, key) => {\n        const { accountingAddress } = routes[key] || {\n          accountingAddress: null,\n        };\n\n        return (\n          accountingAddress && getFundHoldings(environment, accountingAddress)\n        );\n      }),\n    );\n  });\n\n  const fundIsShutdown = new DataLoader(addresses => {\n    const fn = getFundIsShutdown(environment);\n    return Promise.all(addresses.map(fn) || []);\n  });\n\n  const fundParticipation = new DataLoader(\n    async pairs => {\n      const funds = pairs.map(pair => pair.fund);\n      const investors = pairs.map(pair => pair.investor);\n      const routes = await fundRoutes.loadMany(funds);\n      return Promise.all(\n        investors.map((investor, key) => {\n          const { sharesAddress } = routes[key] || {\n            sharesAddress: null,\n          };\n\n          return (\n            sharesAddress &&\n            getFundParticipation(environment, sharesAddress, investor)\n          );\n        }),\n      );\n    },\n    {\n      cacheKeyFn: pair => `${pair.fund}:${pair.investor}`,\n    },\n  );\n\n  const fundByName = new DataLoader(async names => {\n    const ranking = await fundRanking();\n    return Promise.all(\n      names.map(name => {\n        const entry = R.find(R.propEq('name', name), ranking);\n        return R.prop('address', entry);\n      }),\n    );\n  });\n\n  const fundRanking = memoizeOne(() => {\n    return takeLast(streams.ranking$);\n  });\n\n  const symbolBalance = new DataLoader(\n    async pairs => {\n      const fn = getSymbolBalance(environment);\n      const result = pairs.map(pair => fn(pair.symbol, pair.address));\n      return Promise.all(result || []);\n    },\n    {\n      cacheKeyFn: pair => `${pair.symbol}:${pair.address}`,\n    },\n  );\n\n  const symbolBalanceObservable = new DataLoader(\n    async pairs => {\n      const fn = getSymbolBalanceObservable(environment, streams);\n      const result = pairs.map(pair => fn(pair.symbol, pair.address));\n      return Promise.all(result || []);\n    },\n    {\n      cacheKeyFn: pair => `${pair.symbol}:${pair.address}`,\n    },\n  );\n\n  const assetPrice = new DataLoader(\n    tokens => {\n      const fn = getAssetPrice(environment);\n      return Promise.all(tokens.map(fn) || []);\n    },\n    {\n      cacheKeyFn: token => `${token.symbol}`,\n    },\n  );\n\n  const exchangeOrders = new DataLoader(\n    pairs => {\n      const fn = getExchangeOrders(environment);\n      const result = pairs.map(pair =>\n        fn(pair.exchange, pair.base, pair.quote),\n      );\n      return Promise.all(result || []);\n    },\n    {\n      cacheKeyFn: options =>\n        `${options.exchange}:${options.base}:${options.quote}`,\n    },\n  );\n\n  const quoteToken = memoizeOne(() => {\n    return getQuoteToken(\n      environment,\n      environment.deployment.melonContracts.priceSource,\n    );\n  });\n\n  const currentBlock = memoizeOne(() => {\n    return takeLast(streams.block$.pipe(pluck('number')));\n  });\n\n  const nodeSynced = memoizeOne(() => {\n    return takeLast(streams.syncing$.pipe(map(value => !value)));\n  });\n\n  const priceFeedUp = memoizeOne(() => {\n    return takeLast(streams.recentPrice$);\n  });\n\n  const peerCount = memoizeOne(() => {\n    return takeLast(streams.peers$);\n  });\n\n  const versionDeployment = memoizeOne(() => {\n    return environment.deployment;\n  });\n\n  const networkName = memoizeOne(async () => {\n    return resolveNetwork(await environment.eth.net.getId());\n  });\n\n  return {\n    assetPrice,\n    currentBlock,\n    fundAddressFromManager,\n    fundByName,\n    fundCalculations,\n    fundHoldings,\n    fundInception,\n    fundIsShutdown,\n    fundName,\n    fundNativeAsset,\n    fundOwner,\n    fundParticipation,\n    fundDenominationAsset,\n    fundRank,\n    fundRanking,\n    fundReady,\n    fundRoutes,\n    fundTotalSupply,\n    generateMnemonic,\n    importWallet,\n    networkName,\n    nodeSynced,\n    peerCount,\n    priceFeedUp,\n    quoteToken,\n    restoreWallet,\n    symbolBalance,\n    symbolBalanceObservable,\n    versionDeployment,\n    fundIsComplete,\n    routes,\n    exchangeOrders,\n  };\n};\n","import * as Tm from '@melonproject/token-math';\nimport * as R from 'ramda';\n\nimport { getPrice } from '@melonproject/protocol';\n\nexport default R.curryN(2, (environment, token: Tm.token.TokenInterface) => {\n  return getPrice(\n    environment,\n    environment.deployment.melonContracts.priceSource,\n    token,\n  );\n});\n","import * as R from 'ramda';\nimport {\n  exchanges,\n  Exchange,\n  Network,\n} from '@melonproject/exchange-aggregator';\nimport { Environment } from '@melonproject/protocol/lib/utils/environment/Environment';\nimport { getTokenBySymbol } from '@melonproject/protocol/lib/utils/environment/getTokenBySymbol';\n\nexport default R.curryN(\n  4,\n  async (\n    environment: Environment,\n    exchange: Exchange,\n    base: string,\n    quote: string,\n  ) => {\n    const options = {\n      network: Network.MAINNET,\n      pair: {\n        base: getTokenBySymbol(environment, base),\n        quote: getTokenBySymbol(environment, quote),\n      },\n    };\n\n    const result = (() => {\n      switch (exchange) {\n        case 'OASIS_DEX':\n          return exchanges.oasisdex.fetch({\n            ...options,\n            environment,\n          });\n        case 'RADAR_RELAY':\n          return exchanges.radarrelay.fetch(options);\n        case 'KYBER_NETWORK':\n          return exchanges.kyber.fetch(options);\n        case 'ETHFINEX':\n          return exchanges.ethfinex.fetch(options);\n        default:\n          throw new Error('Invalid exchange.');\n      }\n    })();\n\n    return result.catch(() => []);\n  },\n);\n","import * as R from 'ramda';\nimport { managersToHubs } from '@melonproject/protocol';\n\nfunction fundAddressFromManager(environment, managerAddress) {\n  return managersToHubs(\n    environment,\n    environment.deployment.melonContracts.version,\n    managerAddress,\n  );\n}\n\nexport default R.curryN(2, fundAddressFromManager);\n","import * as R from 'ramda';\nimport { performCalculations } from '@melonproject/protocol/lib/contracts/fund/accounting/calls/performCalculations';\n\nfunction fundCalculations(environment, address) {\n  return performCalculations(environment, address);\n}\n\nexport default R.curryN(2, fundCalculations);\n","import * as R from 'ramda';\nimport { getDenominationAsset } from '@melonproject/protocol';\n\nfunction fundDenominationAsset(environment, address) {\n  return getDenominationAsset(environment, address);\n}\n\nexport default R.curryN(2, fundDenominationAsset);\n","import * as R from 'ramda';\nimport * as Tm from '@melonproject/token-math';\nimport {\n  getFundHoldings,\n  isEmptyAddress,\n  isAddress,\n} from '@melonproject/protocol';\nimport { getTokenByAddress } from '@melonproject/protocol/lib/utils/environment/getTokenByAddress';\n\nasync function fundHoldings(environment, address) {\n  const { 0: quantities, 1: tokens } = await getFundHoldings(\n    environment,\n    address,\n  );\n\n  const availableTokens = R.pathOr(\n    [],\n    ['deployment', 'thirdPartyContracts', 'tokens'],\n    environment,\n  ).map(value => {\n    return {\n      quantity: 0,\n      token: value,\n    };\n  });\n\n  const holdings = tokens\n    .filter(value => {\n      return isAddress(value) && !isEmptyAddress(value);\n    })\n    .map((value, key) => {\n      const token = getTokenByAddress(environment, value);\n      return Tm.createQuantity(token, quantities[key]);\n    });\n\n  return R.unionWith(R.eqBy(R.prop('token')), holdings, availableTokens);\n}\n\nexport default R.curryN(2, fundHoldings);\n","import * as R from 'ramda';\nimport { getCreationTime } from '@melonproject/protocol/lib/contracts/fund/hub/calls/getCreationTime';\n\nfunction fundInception(environment, address) {\n  return getCreationTime(environment, address);\n}\n\nexport default R.curryN(2, fundInception);\n","import * as R from 'ramda';\nimport { childExists } from '@melonproject/protocol';\n\nasync function fundIsComplete(environment, fundAddress) {\n  return childExists(\n    environment,\n    environment.deployment.melonContracts.version,\n    fundAddress,\n  );\n}\n\nexport default R.curryN(2, fundIsComplete);\n","import * as R from 'ramda';\nimport { isShutDown } from '@melonproject/protocol/lib/contracts/fund/hub/calls/isShutDown';\n\nfunction fundIsShutdown(environment, address) {\n  return isShutDown(environment, address);\n}\n\nexport default R.curryN(2, fundIsShutdown);\n","import * as R from 'ramda';\nimport { getName } from '@melonproject/protocol';\n\nfunction fundName(environment, address) {\n  return getName(environment, address);\n}\n\nexport default R.curryN(2, fundName);\n","import * as R from 'ramda';\nimport { getNativeToken } from '@melonproject/protocol/lib/contracts/fund/accounting/calls/getNativeToken';\n\nfunction fundNativeAsset(environment, address) {\n  return getNativeToken(environment, address);\n}\n\nexport default R.curryN(2, fundNativeAsset);\n","import * as R from 'ramda';\nimport { getManager } from '@melonproject/protocol';\n\nfunction fundOwner(environment, address) {\n  return getManager(environment, address);\n}\n\nexport default R.curryN(2, fundOwner);\n","import * as R from 'ramda';\nimport { balanceOf } from '@melonproject/protocol';\n\nfunction fundParticipation(environment, sharesAddress, investorAddress) {\n  return balanceOf(environment, sharesAddress, { address: investorAddress });\n}\n\nexport default R.curryN(3, fundParticipation);\n","import * as R from 'ramda';\nimport { getRoutes } from '@melonproject/protocol';\n\nfunction fundRoutes(environment, address) {\n  return getRoutes(environment, address);\n}\n\nexport default R.curryN(2, fundRoutes);\n","import * as R from 'ramda';\nimport * as Tm from '@melonproject/token-math';\nimport { getInfo } from '@melonproject/protocol';\nimport { getToken } from '@melonproject/protocol/lib/contracts/dependencies/token/calls/getToken';\n\nasync function getTotalSupply(environment, address) {\n  const info = await getInfo(environment, address);\n  const token = await getToken(environment, address);\n  return Tm.createQuantity(token, info.totalSupply);\n}\n\nexport default R.curryN(2, getTotalSupply);\n","import { getQuoteToken } from '@melonproject/protocol';\n\nexport default getQuoteToken;\n","import * as R from 'ramda';\nimport { managersToRoutes } from '@melonproject/protocol';\nimport { isEmptyAddress } from '@melonproject/protocol';\n\nasync function routes(environment, managerAddress) {\n  const routes = await managersToRoutes(\n    environment,\n    environment.deployment.melonContracts.version,\n    managerAddress,\n  );\n\n  const isValidAddress = address => {\n    if (isEmptyAddress(address)) {\n      return null;\n    }\n    return address;\n  };\n\n  return {\n    accountingAddress: isValidAddress(routes.accounting),\n    feeManagerAddress: isValidAddress(routes.feeManager),\n    participationAddress: isValidAddress(routes.participation),\n    policyManagerAddress: isValidAddress(routes.policyManager),\n    sharesAddress: isValidAddress(routes.shares),\n    tradingAddress: isValidAddress(routes.trading),\n    vaultAddress: isValidAddress(routes.vault),\n    registryAddress: isValidAddress(routes.registry),\n    versionAddress: isValidAddress(routes.version),\n  };\n}\n\nexport default R.curryN(2, routes);\n","import * as R from 'ramda';\nimport * as Tm from '@melonproject/token-math';\nimport { balanceOf, getTokenBySymbol } from '@melonproject/protocol';\n\nexport const getEthBalance = async (environment, address) => {\n  const balance = await environment.eth.getBalance(address);\n  const token = Tm.createToken('ETH');\n  const quantity = Tm.createQuantity(token, balance.toString());\n  return quantity;\n};\n\nexport const getSymbolBalance = R.curryN(3, (environment, symbol, address) => {\n  if (symbol === 'ETH') {\n    return getEthBalance(environment, address);\n  }\n\n  const token = getTokenBySymbol(environment, symbol);\n  return (token && balanceOf(environment, token.address, { address })) || null;\n});\n\nexport default getSymbolBalance;\n","import * as R from 'ramda';\nimport * as Rx from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { balanceOf, getTokenBySymbol } from '@melonproject/protocol';\nimport { getEthBalance } from './symbolBalance';\n\nexport const getSymbolBalanceObservable = R.curryN(\n  4,\n  (environment, streams, symbol, address) => {\n    if (symbol === 'ETH') {\n      return streams.block$.pipe(\n        switchMap(() => getEthBalance(environment, address)),\n      );\n    }\n\n    const token = getTokenBySymbol(environment, symbol);\n    const zen =\n      token && balanceOf.observable(environment, token.address, { address });\n    return (zen && Rx.from(zen)) || Rx.empty();\n  },\n);\n\nexport default getSymbolBalanceObservable;\n","import Wallet from 'ethers-wallet';\n\nconst noop = (decrypted, encrypted) => {};\nasync function decryptWallet(wallet, password, callback = noop) {\n  const decrypted = await Wallet.Wallet.fromEncryptedWallet(wallet, password);\n\n  await callback(decrypted, wallet);\n  return [decrypted.address];\n}\n\nexport default decryptWallet;\n","import Wallet from 'ethers-wallet';\nimport bip39 from 'bip39';\n\nasync function generateMnemonic() {\n  const mnemonic = bip39.generateMnemonic();\n  const wallet = new Wallet.Wallet.fromMnemonic(mnemonic);\n  return wallet.mnemonic;\n}\n\nexport default generateMnemonic;\n","import Wallet from 'ethers-wallet';\n\nconst noop = (decrypted, encrypted) => {};\nasync function restoreWallet(mnemonic, password, callback = noop) {\n  const decrypted = Wallet.Wallet.fromMnemonic(mnemonic);\n  const encrypted = await decrypted.encrypt(password);\n  await callback(decrypted, encrypted);\n\n  return [decrypted.address];\n}\n\nexport default restoreWallet;\n","import { GraphQLDateTime as DateTime } from 'graphql-iso-date';\nimport * as keytar from 'keytar';\nimport * as R from 'ramda';\nimport { distinctUntilChanged, map, pluck, skip, tap } from 'rxjs/operators';\n\nimport {\n  approve as approveTransfer,\n  beginSetup,\n  cancelOasisDexOrder,\n  completeSetup,\n  Contracts,\n  createAccounting,\n  createFeeManager,\n  createParticipation,\n  createPolicyManager,\n  createShares,\n  createTrading,\n  createVault,\n  deployContract,\n  executeRequest,\n  FunctionSignatures,\n  getTokenBySymbol,\n  makeOasisDexOrder,\n  register,\n  requestInvestment,\n  shutDownFund,\n  triggerRewardAllFees,\n  withDifferentAccount,\n} from '@melonproject/protocol';\nimport * as Tm from '@melonproject/token-math';\n\nimport { registerServer } from 'apollo-server-express';\nimport sameBlock from './utils/sameBlock';\nimport toAsyncIterator from './utils/toAsyncIterator';\n\nexport default {\n  DateTime,\n  Query: {\n    defaultAccount: (_, __, { loaders }) => {\n      const wallet = loaders.getWallet();\n      return wallet && wallet.address;\n    },\n    allAccounts: (_, __, { loaders }) => {\n      // TODO: Make this return all accounts.\n      const wallet = loaders.getWallet();\n      return wallet && wallet.address && [wallet.address];\n    },\n    hasStoredWallet: async () => {\n      const credentials = await keytar.findCredentials('melon.fund');\n      return !!(credentials && credentials.length);\n    },\n    currentBlock: (_, __, { loaders }) => {\n      return loaders.currentBlock();\n    },\n    nodeSynced: (_, __, { loaders }) => {\n      return loaders.nodeSynced();\n    },\n    totalFunds: (_, __, { loaders }) => {\n      return loaders.fundRanking().then(R.prop('length'));\n    },\n    priceFeedUp: (_, __, { loaders }) => {\n      return loaders.priceFeedUp();\n    },\n    peerCount: (_, __, { loaders }) => {\n      return loaders.peerCount();\n    },\n    contractDeployment: (_, __, { loaders }) => {\n      return loaders.versionDeployment();\n    },\n    network: (_, __, { loaders }) => {\n      return loaders.networkName();\n    },\n    rankings: (_, __, { loaders }) => {\n      return loaders.fundRanking();\n    },\n    orders: (_, { exchange, base, quote }, { loaders }) => {\n      return loaders.exchangeOrders.load({ exchange, base, quote });\n    },\n    fund: (_, { address }, { loaders }) => {\n      return (\n        (Tm.isAddress(address) &&\n          loaders.fundReady\n            .load(address)\n            .then(\n              R.cond([\n                [R.equals(true), R.always(address)],\n                [R.equals(false), R.always(null)],\n              ]),\n            )) ||\n        null\n      );\n    },\n    fundByName: (_, { name }, { loaders }) => {\n      return loaders.fundByName.load(name);\n    },\n    associatedFund: (_, { manager }, { loaders }) => {\n      return loaders.fundAddressFromManager.load(manager);\n    },\n    balance: (_, { address, symbol }, { loaders }) => {\n      return loaders.symbolBalance.load({ address, symbol });\n    },\n    routes: (_, { manager }, { loaders }) => {\n      return loaders.routes.load(manager);\n    },\n  },\n  Ranking: {\n    id: parent => {\n      return Buffer.from(parent.address).toString('base64');\n    },\n    fund: parent => {\n      return parent.address;\n    },\n    inception: parent => {\n      return parent.creationTime;\n    },\n  },\n  Fund: {\n    id: parent => {\n      return Buffer.from(parent).toString('base64');\n    },\n    address: parent => {\n      return parent;\n    },\n    isComplete: (parent, _, { loaders }) => {\n      return loaders.fundIsComplete.load(parent);\n    },\n    name: (parent, _, { loaders }) => {\n      return loaders.fundName.load(parent);\n    },\n    isShutdown: (parent, _, { loaders }) => {\n      return loaders.fundIsShutdown.load(parent);\n    },\n    owner: (parent, _, { loaders }) => {\n      return loaders.fundOwner.load(parent);\n    },\n    routes: (parent, _, { loaders }) => {\n      return loaders.fundRoutes.load(parent);\n    },\n    denominationAsset: (parent, _, { loaders }) => {\n      return loaders.fundDenominationAsset.load(parent);\n    },\n    nativeAsset: (parent, _, { loaders }) => {\n      return loaders.fundNativeAsset.load(parent);\n    },\n    totalSupply: (parent, _, { loaders }) => {\n      return loaders.fundTotalSupply.load(parent);\n    },\n    rank: (parent, _, { loaders }) => {\n      return loaders.fundRank.load(parent);\n    },\n    inception: (parent, _, { loaders }) => {\n      return loaders.fundInception.load(parent);\n    },\n    personalStake: (parent, { investor }, { loaders }) => {\n      return loaders.fundParticipation.load({\n        fund: parent,\n        investor,\n      });\n    },\n    gav: (parent, _, { loaders }) => {\n      return loaders.fundCalculations.load(parent).then(R.prop('gav'));\n    },\n    nav: (parent, _, { loaders }) => {\n      return loaders.fundCalculations.load(parent).then(R.prop('nav'));\n    },\n    sharePrice: (parent, _, { loaders }) => {\n      return loaders.fundCalculations.load(parent).then(R.prop('sharePrice'));\n    },\n    managementReward: async (parent, _, { loaders }) => {\n      return null;\n    },\n    managementFeeRate: async (parent, _, { loaders }) => {\n      return null;\n    },\n    performanceReward: async (parent, _, { loaders }) => {\n      return null;\n    },\n    performanceFeeRate: async (parent, _, { loaders }) => {\n      return null;\n    },\n    unclaimedFees: async (parent, _, { loaders }) => {\n      return null;\n    },\n    feesShareQuantity: async (parent, _, { loaders }) => {\n      return null;\n    },\n    holdings: async (parent, _, { loaders }) => {\n      return loaders.fundHoldings.load(parent);\n    },\n  },\n  Order: {\n    __resolveType: object => {\n      switch (object.exchange) {\n        case 'RADAR_RELAY':\n          return 'ZeroExOrder';\n        case 'OASIS_DEX':\n          return 'OasisDexOrder';\n        case 'KYBER_NETWORK':\n          return 'KyberNetworkOrder';\n        case 'ETHFINEX':\n          return 'EthfinexOrder';\n        default:\n          throw new Error('Invalid order type.');\n      }\n    },\n    price: parent => Tm.toFixed(parent.trade),\n    volume: parent => Tm.toFixed(parent.trade.base),\n  },\n  ZeroExOrder: {\n    metadata: parent => parent.original.signedOrder,\n  },\n  OasisDexOrder: {\n    metadata: parent => parent.original,\n  },\n  Holding: {\n    fraction: async (parent, _, { loaders }) => {\n      // TODO: Re-implement this.\n      return 0;\n    },\n    balance: parent => {\n      return parent;\n    },\n    price: async (parent, _, { loaders }) => {\n      return loaders.assetPrice.load(parent.token);\n    },\n  },\n  Mutation: {\n    estimateFundSetupBegin: async (\n      _,\n      { from, name, exchanges, managementFee, performanceFee },\n      { environment, loaders },\n    ) => {\n      const quoteToken = await loaders.quoteToken();\n      const {\n        exchangeConfigs,\n        melonContracts: { priceSource, version },\n        thirdPartyContracts: { tokens },\n      } = environment.deployment;\n\n      const selectedExchanges = {\n        ...(exchanges.includes('ZERO_EX_EXCHANGE') && {\n          ZeroEx: exchangeConfigs.ZeroEx,\n        }),\n        ...(exchanges.includes('MATCHING_MARKET') && {\n          MatchingMarket: exchangeConfigs.MatchingMarket,\n        }),\n        ...(exchanges.includes('KYBER_NETWORK') && {\n          KyberNetwork: exchangeConfigs.KyberNetwork,\n        }),\n        ...(exchanges.includes('ETHFINEX') && {\n          Ethfinex: exchangeConfigs.Ethfinex,\n        }),\n      };\n\n      const nativeToken = tokens.find(token => {\n        return token.symbol === 'WETH';\n      });\n\n      const mlnToken = tokens.find(token => {\n        return token.symbol === 'MLN';\n      });\n\n      const fees = [\n        {\n          feeAddress: environment.deployment.melonContracts.fees.managementFee.toLowerCase(),\n          feePeriod: new Tm.BigInteger(0),\n          feeRate: new Tm.BigInteger(\n            Tm.multiply(\n              new Tm.BigInteger(managementFee),\n              Tm.power(new Tm.BigInteger(10), new Tm.BigInteger(16)),\n            ),\n          ),\n        },\n        {\n          feeAddress: environment.deployment.melonContracts.fees.performanceFee.toLowerCase(),\n          feePeriod: new Tm.BigInteger(86400 * 90),\n          feeRate: new Tm.BigInteger(\n            Tm.multiply(\n              new Tm.BigInteger(performanceFee),\n              Tm.power(new Tm.BigInteger(10), new Tm.BigInteger(16)),\n            ),\n          ),\n        },\n      ];\n\n      // TODO: Properly handle provided exchanges, tokens, etc.\n      const params = {\n        fees,\n        defaultTokens: [quoteToken, mlnToken],\n        exchangeConfigs: selectedExchanges,\n        fundName: name,\n        priceSource,\n        quoteToken,\n        nativeToken,\n      };\n\n      // TODO: The environment should not hold account data. Maybe?\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await beginSetup.prepare(env, version, params);\n\n      return result && result.rawTransaction;\n    },\n    executeFundSetupBegin: (_, { from, signed }, { environment }) => {\n      const transaction = signed.rawTransaction;\n      const version = environment.deployment.melonContracts.version;\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      return beginSetup.send(env, version, transaction);\n    },\n    estimateFundSetupStep: async (_, { step, from }, { environment }) => {\n      const version = environment.deployment.melonContracts.version;\n      const fn = {\n        CREATE_ACCOUNTING: createAccounting,\n        CREATE_FEE_MANAGER: createFeeManager,\n        CREATE_PARTICIPATION: createParticipation,\n        CREATE_POLICY_MANAGER: createPolicyManager,\n        CREATE_SHARES: createShares,\n        CREATE_TRADING: createTrading,\n        CREATE_VAULT: createVault,\n      }[step];\n\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n      const result = await fn.prepare(env, version);\n\n      return result && result.rawTransaction;\n    },\n    executeFundSetupStep: async (\n      _,\n      { step, from, signed },\n      { environment },\n    ) => {\n      const version = environment.deployment.melonContracts.version;\n      const transaction = signed.rawTransaction;\n      const fn = {\n        // TODO: Change\n        CREATE_ACCOUNTING: createAccounting,\n        CREATE_FEE_MANAGER: createFeeManager,\n        CREATE_PARTICIPATION: createParticipation,\n        CREATE_POLICY_MANAGER: createPolicyManager,\n        CREATE_SHARES: createShares,\n        CREATE_TRADING: createTrading,\n        CREATE_VAULT: createVault,\n      }[step];\n\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n      const result = await fn.send(env, version, transaction);\n\n      return !!result;\n    },\n\n    estimateFundSetupComplete: async (_, { from }, { environment }) => {\n      const version = environment.deployment.melonContracts.version;\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n      const result = await completeSetup.prepare(env, version);\n\n      return result && result.rawTransaction;\n    },\n    executeFundSetupComplete: async (_, { from, signed }, { environment }) => {\n      const version = environment.deployment.melonContracts.version;\n      const transaction = signed.rawTransaction;\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      return completeSetup.send(env, version, transaction);\n    },\n    estimateRequestInvestment: async (\n      _,\n      { from, fundAddress, investmentAmount },\n      { environment, loaders },\n    ) => {\n      const { tokens } = environment.deployment.thirdPartyContracts;\n      const { participationAddress } = await loaders.fundRoutes.load(\n        fundAddress,\n      );\n      const nativeToken = tokens.find(token => {\n        return token.symbol === 'WETH';\n      });\n\n      const params = {\n        investmentAmount: Tm.createQuantity(nativeToken, investmentAmount),\n      };\n\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await requestInvestment.prepare(\n        env,\n        participationAddress,\n        params,\n      );\n\n      return result && result.rawTransaction;\n    },\n    executeRequestInvestment: async (\n      _,\n      { from, signed, fundAddress },\n      { environment, loaders },\n    ) => {\n      const { participationAddress } = await loaders.fundRoutes.load(\n        fundAddress,\n      );\n      const transaction = signed.rawTransaction;\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await requestInvestment.send(\n        env,\n        participationAddress,\n        transaction,\n      );\n\n      return !!result;\n    },\n    estimateApproveTransfer: async (\n      _,\n      { from, fundAddress, investmentAmount },\n      { environment, loaders },\n    ) => {\n      const { participationAddress } = await loaders.fundRoutes.load(\n        fundAddress,\n      );\n      const quoteToken = await loaders.quoteToken();\n      const params = {\n        howMuch: Tm.createQuantity(quoteToken, investmentAmount),\n        spender: participationAddress,\n      };\n\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await approveTransfer.prepare(env, params);\n      return result && result.rawTransaction;\n    },\n    executeApproveTransfer: async (\n      _,\n      { from, signed, fundAddress, investmentAmount },\n      { environment, loaders },\n    ) => {\n      const { participationAddress } = await loaders.fundRoutes.load(\n        fundAddress,\n      );\n      const quoteToken = await loaders.quoteToken();\n      const transaction = signed.rawTransaction;\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const params = {\n        howMuch: Tm.createQuantity(quoteToken, investmentAmount),\n        spender: participationAddress,\n      };\n\n      const result = await approveTransfer.send(env, transaction, params);\n\n      return !!result;\n    },\n    estimateExecuteRequest: async (\n      _,\n      { from, fundAddress },\n      { environment, loaders },\n    ) => {\n      const { participationAddress } = await loaders.fundRoutes.load(\n        fundAddress,\n      );\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await executeRequest.prepare(env, participationAddress);\n\n      return result && result.rawTransaction;\n    },\n    executeExecuteRequest: async (\n      _,\n      { from, signed, fundAddress },\n      { environment, loaders },\n    ) => {\n      const { participationAddress } = await loaders.fundRoutes.load(\n        fundAddress,\n      );\n      const transaction = signed.rawTransaction;\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await executeRequest.send(\n        env,\n        participationAddress,\n        transaction,\n      );\n\n      return !!result;\n    },\n    estimateShutDownFund: async (_, { from, fundAddress }, { environment }) => {\n      const params = {\n        hub: fundAddress,\n      };\n\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await shutDownFund.prepare(\n        env,\n        environment.deployment.melonContracts.version,\n        params,\n      );\n\n      return result && result.rawTransaction;\n    },\n    executeShutDownFund: async (\n      _,\n      { from, signed, fundAddress },\n      { environment },\n    ) => {\n      const version = environment.deployment.melonContracts.version;\n      const transaction = signed.rawTransaction;\n      const params = {\n        hub: fundAddress,\n      };\n\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await shutDownFund.send(env, version, transaction, params);\n\n      return !!result;\n    },\n    estimateTriggerRewardAllFees: async (\n      _,\n      { from, fundAddress },\n      { environment, loaders },\n    ) => {\n      const { feeManagerAddress } = await loaders.fundRoutes.load(fundAddress);\n\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await triggerRewardAllFees.prepare(env, feeManagerAddress);\n\n      return result && result.rawTransaction;\n    },\n    executeTriggerRewardAllFees: async (\n      _,\n      { from, signed, fundAddress },\n      { environment, loaders },\n    ) => {\n      const { feeManagerAddress } = await loaders.fundRoutes.load(fundAddress);\n      const transaction = signed.rawTransaction;\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await triggerRewardAllFees.send(\n        env,\n        feeManagerAddress,\n        transaction,\n      );\n\n      return !!result;\n    },\n    estimateMakeOrder: async (\n      _,\n      { from, exchange, buyToken, buyQuantity, sellToken, sellQuantity },\n      { environment, loaders },\n    ) => {\n      const fund = await loaders.fundAddressFromManager.load(from);\n      const { tradingAddress } = await loaders.fundRoutes.load(fund);\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      if (exchange === 'OASIS_DEX') {\n        const makerQuantity = Tm.createQuantity(\n          getTokenBySymbol(environment, sellToken),\n          sellQuantity,\n        );\n        const takerQuantity = Tm.createQuantity(\n          getTokenBySymbol(environment, buyToken),\n          buyQuantity,\n        );\n\n        const result = await makeOasisDexOrder.prepare(env, tradingAddress, {\n          makerQuantity,\n          takerQuantity,\n        });\n\n        return result && result.rawTransaction;\n      }\n\n      throw new Error(`Make order not implemented for ${exchange}`);\n    },\n    executeMakeOrder: async (\n      _,\n      { from, signed, exchange },\n      { environment, loaders },\n    ) => {\n      const fund = await loaders.fundAddressFromManager.load(from);\n      const {\n        tradingAddress,\n        accountingAddress,\n      } = await loaders.fundRoutes.load(fund);\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n      const denominationAsset = await loaders.fundDenominationAsset.load(\n        accountingAddress,\n      );\n\n      if (exchange === 'OASIS_DEX') {\n        const result = await makeOasisDexOrder.send(\n          env,\n          tradingAddress,\n          signed.rawTransaction,\n        );\n\n        const type = Tm.isEqual(denominationAsset, result.sell.token)\n          ? 'BID'\n          : 'ASK';\n\n        const trade =\n          type === 'BID'\n            ? Tm.createPrice(result.buy, result.sell)\n            : Tm.createPrice(result.sell, result.buy);\n\n        const volume = Tm.toFixed(trade.quote);\n\n        const order = {\n          id: result.id,\n          type,\n          trade,\n          price: Tm.toFixed(trade),\n          volume,\n          exchange,\n        };\n\n        return order;\n      }\n\n      throw new Error(`Make order not implemented for ${exchange}`);\n    },\n    estimateCancelOrder: async (\n      _,\n      { from, exchange, id, buyToken, sellToken },\n      { environment, loaders },\n    ) => {\n      const fund = await loaders.fundAddressFromManager.load(from);\n      const { tradingAddress } = await loaders.fundRoutes.load(fund);\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      if (exchange === 'OASIS_DEX') {\n        const makerAsset = new Tm.Address(\n          getTokenBySymbol(env, sellToken).address || '',\n        );\n        const takerAsset = new Tm.Address(\n          getTokenBySymbol(env, buyToken).address || '',\n        );\n\n        const result = await cancelOasisDexOrder.prepare(env, tradingAddress, {\n          id,\n          maker: tradingAddress,\n          makerAsset,\n          takerAsset,\n        });\n\n        return result && result.rawTransaction;\n      }\n\n      throw new Error(`Cancel order not implemented for ${exchange}`);\n    },\n    executeCancelOrder: async (\n      _,\n      { from, signed, exchange },\n      { environment, loaders },\n    ) => {\n      const fund = await loaders.fundAddressFromManager.load(from);\n      const { tradingAddress } = await loaders.fundRoutes.load(fund);\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      if (exchange === 'OASIS_DEX') {\n        const result = await cancelOasisDexOrder.send(\n          env,\n          tradingAddress,\n          signed.rawTransaction,\n        );\n\n        return !!result;\n      }\n\n      throw new Error(`Cancel order not implemented for ${exchange}`);\n    },\n    estimateDeployUserWhitelist: async (\n      _,\n      { from, addresses },\n      { environment, loaders },\n    ) => {\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await deployContract.prepare(\n        env,\n        Contracts.UserWhitelist,\n        [addresses],\n      );\n\n      return result.unsignedTransaction;\n    },\n    estimateDeployAssetBlacklist: async (\n      _,\n      { from, symbols },\n      { environment, loaders },\n    ) => {\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const addresses = symbols.map(\n        symbol => getTokenBySymbol(env, symbol).address,\n      );\n\n      const result = await deployContract.prepare(\n        env,\n        Contracts.AssetBlacklist,\n        [addresses],\n      );\n\n      return result.unsignedTransaction;\n    },\n    estimateDeployAssetWhitelist: async (\n      _,\n      { from, symbols },\n      { environment, loaders },\n    ) => {\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const addresses = symbols.map(\n        symbol => getTokenBySymbol(env, symbol).address,\n      );\n\n      const result = await deployContract.prepare(\n        env,\n        Contracts.AssetWhitelist,\n        [addresses],\n      );\n\n      return result.unsignedTransaction;\n    },\n    estimateDeployMaxConcentration: async (\n      _,\n      { from, percent },\n      { environment, loaders },\n    ) => {\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await deployContract.prepare(\n        env,\n        Contracts.MaxConcentration,\n        [\n          `${Tm.divide(\n            Tm.appendDecimals(Tm.createToken('ETH'), percent),\n            100,\n          )}`,\n        ],\n      );\n      return result.unsignedTransaction;\n    },\n    estimateDeployMaxPositions: async (\n      _,\n      { from, positions },\n      { environment, loaders },\n    ) => {\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await deployContract.prepare(env, Contracts.MaxPositions, [\n        `${positions}`,\n      ]);\n\n      return result.unsignedTransaction;\n    },\n    estimateDeployPriceTolerance: async (\n      _,\n      { from, percent },\n      { environment, loaders },\n    ) => {\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n\n      const result = await deployContract.prepare(\n        env,\n        Contracts.PriceTolerance,\n        [`${percent}`],\n      );\n\n      return result.unsignedTransaction;\n    },\n    executeDeploy: async (_, { from, signed }, { environment, loaders }) => {\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n      const result = await deployContract.send(env, {\n        signedTransaction: signed.rawTransaction,\n      });\n      return result;\n    },\n    estimateRegisterPolicies: async (\n      _,\n      { from, policies },\n      { environment, loaders },\n    ) => {\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n      const fund = await loaders.fundAddressFromManager.load(from);\n      const { policyManagerAddress } = await loaders.fundRoutes.load(fund);\n\n      const registrations = policies.reduce((carry, current) => {\n        if (current.type === 'TRADE') {\n          return [\n            {\n              method: FunctionSignatures.takeOrder,\n              policy: current.address,\n            },\n            {\n              method: FunctionSignatures.makeOrder,\n              policy: current.address,\n            },\n            {\n              method: FunctionSignatures.cancelOrder,\n              policy: current.address,\n            },\n            ...carry,\n          ];\n        } else {\n          return [\n            {\n              method: FunctionSignatures.executeRequestFor,\n              policy: current.address,\n            },\n          ];\n        }\n      }, []);\n\n      const result = await register.prepare(\n        env,\n        policyManagerAddress,\n        registrations,\n      );\n\n      return result.rawTransaction;\n    },\n    executeRegisterPolicies: async (\n      _,\n      { from, signed },\n      { environment, loaders },\n    ) => {\n      const env = withDifferentAccount(environment, new Tm.Address(from));\n      const fund = await loaders.fundAddressFromManager.load(from);\n      const { policyManagerAddress } = await loaders.fundRoutes.load(fund);\n\n      const result = await register.send(\n        env,\n        policyManagerAddress,\n        signed.rawTransaction,\n      );\n\n      return result;\n    },\n    deleteWallet: async () => {\n      const credentials = (await keytar.findCredentials('melon.fund')) || [];\n      credentials.forEach(item => {\n        keytar.deletePassword('melon.fund', item.account);\n      });\n\n      return true;\n    },\n    loginWallet: async (_, { password }, { loaders }) => {\n      const credentials = await keytar.findCredentials('melon.fund');\n      if (credentials && credentials.length) {\n        const item = R.head(credentials);\n        return loaders.importWallet(item.password, password, decrypted => {\n          loaders.setWallet(decrypted);\n        });\n      }\n\n      return null;\n    },\n    exportWallet: (_, { password }, { loaders }) => {\n      const wallet = loaders.getWallet();\n      return wallet && wallet.encrypt(password);\n    },\n    importWallet: (_, { wallet, password }, { loaders }) => {\n      return loaders.importWallet(\n        wallet,\n        password,\n        async (decrypted, encrypted) => {\n          // Currently, we only support a single stored wallet.\n          const credentials =\n            (await keytar.findCredentials('melon.fund')) || [];\n          credentials.forEach(item => {\n            keytar.deletePassword('melon.fund', item.account);\n          });\n\n          await keytar.setPassword('melon.fund', decrypted.address, encrypted);\n          loaders.setWallet(decrypted);\n        },\n      );\n    },\n    restoreWallet: (_, { mnemonic, password }, { loaders }) => {\n      return loaders.restoreWallet(\n        mnemonic,\n        password,\n        async (decrypted, encrypted) => {\n          await keytar.setPassword('melon.fund', decrypted.address, encrypted);\n          loaders.setWallet(decrypted);\n        },\n      );\n    },\n    generateMnemonic: (_, __, { loaders }) => {\n      return loaders.generateMnemonic();\n    },\n  },\n  Subscription: {\n    balance: {\n      resolve: value => value,\n      subscribe: async (_, { symbol, address }, { loaders }) => {\n        const observable$ = await loaders.symbolBalanceObservable.load({\n          symbol,\n          address,\n        });\n        const stream$ = observable$.pipe(distinctUntilChanged(R.equals));\n\n        return toAsyncIterator(stream$);\n      },\n    },\n    currentBlock: {\n      resolve: value => value,\n      subscribe: (_, __, { streams }) => {\n        const stream$ = streams.block$.pipe(\n          pluck('number'),\n          distinctUntilChanged(sameBlock),\n        );\n\n        return toAsyncIterator(stream$);\n      },\n    },\n    nodeSynced: {\n      resolve: value => value,\n      subscribe: (_, __, { streams }) => {\n        const stream$ = streams.syncing$.pipe(\n          map(state => !state),\n          distinctUntilChanged(R.equals),\n        );\n\n        return toAsyncIterator(stream$);\n      },\n    },\n    priceFeedUp: {\n      resolve: value => {\n        return value;\n      },\n      subscribe: (_, __, { streams }) => {\n        const stream$ = streams.recentPrice$.pipe(\n          distinctUntilChanged(R.equals),\n        );\n\n        return toAsyncIterator(stream$);\n      },\n    },\n    peerCount: {\n      resolve: value => value,\n      subscribe: (_, __, { streams }) => {\n        const stream$ = streams.peers$.pipe(\n          tap(value => console.log('tap', value)),\n          distinctUntilChanged(R.equals),\n        );\n\n        return toAsyncIterator(stream$);\n      },\n    },\n  },\n};\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"DirectiveDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"authenticated\"},\"arguments\":[],\"locations\":[{\"kind\":\"Name\",\"value\":\"FIELD\"}]},{\"kind\":\"DirectiveDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sign\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"source\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"defaultValue\":{\"kind\":\"StringValue\",\"value\":\"unsigned\",\"block\":false},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"target\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"defaultValue\":{\"kind\":\"StringValue\",\"value\":\"signed\",\"block\":false},\"directives\":[]}],\"locations\":[{\"kind\":\"Name\",\"value\":\"FIELD\"}]},{\"kind\":\"DirectiveDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"account\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"arg\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"defaultValue\":{\"kind\":\"StringValue\",\"value\":\"from\",\"block\":false},\"directives\":[]}],\"locations\":[{\"kind\":\"Name\",\"value\":\"FIELD\"}]},{\"kind\":\"ScalarTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"DateTime\"},\"directives\":[]},{\"kind\":\"EnumTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"},\"directives\":[],\"values\":[{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"RADAR_RELAY\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"OASIS_DEX\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"KYBER_NETWORK\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ETHFINEX\"},\"directives\":[]}]},{\"kind\":\"EnumTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"OrderTypeEnum\"},\"directives\":[],\"values\":[{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ASK\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"BID\"},\"directives\":[]}]},{\"kind\":\"EnumTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FundSetupStepEnum\"},\"directives\":[],\"values\":[{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CREATE_ACCOUNTING\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CREATE_FEE_MANAGER\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CREATE_PARTICIPATION\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CREATE_POLICY_MANAGER\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CREATE_SHARES\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CREATE_TRADING\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CREATE_VAULT\"},\"directives\":[]}]},{\"kind\":\"EnumTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyTypeEnum\"},\"directives\":[],\"values\":[{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"TRADE\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"INVEST\"},\"directives\":[]}]},{\"kind\":\"InterfaceTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Order\"},\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"trade\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"volume\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"OrderTypeEnum\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"EthfinexOrder\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Order\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"trade\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"volume\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"OrderTypeEnum\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ZeroExOrder\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Order\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"trade\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"volume\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"OrderTypeEnum\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"metadata\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ZeroExOrderMetadata\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"OasisDexOrder\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Order\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"trade\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"volume\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"OrderTypeEnum\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"metadata\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"OasisDexOrderMetadata\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"KyberNetworkOrder\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Order\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"trade\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"volume\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"OrderTypeEnum\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ZeroExOrderMetadata\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchangeAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"senderAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"makerAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"takerAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"makerAssetData\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"takerAssetData\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"feeRecipientAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"makerAssetAmount\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"takerAssetAmount\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"makerFee\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"takerFee\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"expirationTimeSeconds\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"signature\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"salt\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"OasisDexOrderMetadata\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"maker\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"taker\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"isActive\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchangeContractAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"base\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"quote\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"token\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Token\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"quantity\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Token\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"symbol\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"decimals\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"address\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Ranking\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"rank\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"address\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"inception\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"DateTime\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fund\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Fund\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sharePrice\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Routes\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"accountingAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"feeManagerAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"participationAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyManagerAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"priceSourceAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"registryAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sharesAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"tradingAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"vaultAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"versionAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Fund\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"rank\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"address\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"inception\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"DateTime\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gav\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"nav\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"routes\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Routes\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"denominationAsset\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Token\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"nativeAsset\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Token\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"holdings\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Holding\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sharePrice\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"totalSupply\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"personalStake\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"investor\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"managementReward\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"managementFeeRate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"performanceReward\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"performanceFeeRate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"unclaimedFees\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"feesShareQuantity\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"isShutdown\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"isComplete\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Holding\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fraction\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Trade\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"quantity\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"timestamp\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Signature\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"r\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"s\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"v\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeConfig\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"adapterAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchangeAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"takesCustody\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"AdapterAddresses\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"kyberAdapter\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"matchingMarketAdapter\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"zeroExAdapter\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyAddresses\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"priceTolerance\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userWhitelist\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FactoryAddresses\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"accountingFactory\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"feeManagerFactory\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"participationFactory\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyManagerFactory\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sharesFactory\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"tradingFactory\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"vaultFactory\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ThirdPartyContracts\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchanges\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeConfig\"}}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"tokens\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Token\"}}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"MelonContracts\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"priceSource\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"adapters\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"AdapterAddresses\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policies\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyAddresses\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"engine\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"registry\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"version\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ranking\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Deployment\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"melonContracts\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MelonContracts\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"thirdPartyContracts\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ThirdPartyContracts\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"version\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ranking\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"tokens\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Token\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"from\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gas\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gasPrice\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"to\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"from\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gas\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gasPrice\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"to\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"address\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyTypeEnum\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultAccount\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"allAccounts\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"hasStoredWallet\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Fetch the associated fund of an account.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"associatedFund\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The address of the account to load the fund for.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"manager\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Loads a fund by its name.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"fundByName\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The name of the fund to load.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Fund\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"network\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"currentBlock\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"nodeSynced\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"priceFeedUp\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"peerCount\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"contractDeployment\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Deployment\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"totalFunds\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"symbol\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"address\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fund\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"address\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Fund\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"rankings\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Ranking\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"orders\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"base\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"quote\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Order\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Loads the current routes for fund creation for a fund manager address.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"routes\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The address of the fund manager.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"manager\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Routes\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Mutation\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Estimates the number of gas units required for the \\\"beginSetup\\\" transaction.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"estimateFundSetupBegin\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchanges\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"performanceFee\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"managementFee\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Executes the \\\"beginSetup\\\" transaction with the given gas price per unit.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"executeFundSetupBegin\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Unsigned transaction data.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Estimates the number of gas units required for a fund setup step transaction.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"estimateFundSetupStep\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The step in the fund factory process.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"step\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FundSetupStepEnum\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Executes a fund setup step transaction with the given gas price per unit.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"executeFundSetupStep\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Unsigned transaction data.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The step in the fund factory process.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"step\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FundSetupStepEnum\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Estimates the number of gas units required for the \\\"completeSetup\\\" transaction.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"estimateFundSetupComplete\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Executes the \\\"completeSetup\\\" transaction with the given gas price per unit.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"executeFundSetupComplete\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Unsigned transaction data.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Estimates the number of gas units required for the \\\"request investment\\\" transaction.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"estimateRequestInvestment\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fundAddress\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"investmentAmount\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Executes the \\\"request investment\\\" transaction with the given gas price per unit.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"executeRequestInvestment\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Unsigned transaction data.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fundAddress\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Estimates the number of gas units required for the \\\"execute request\\\" transaction.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"estimateExecuteRequest\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fundAddress\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Executes the \\\"execute request\\\" transaction with the given gas price per unit.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"executeExecuteRequest\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Unsigned transaction data.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fundAddress\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Estimates the number of gas units required for the \\\"approve transfer\\\" transaction.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"estimateApproveTransfer\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fundAddress\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"investmentAmount\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Executes the \\\"execute request\\\" transaction with the given gas price per unit.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"executeShutDownFund\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Unsigned transaction data.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fundAddress\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Estimates the number of gas units required for the \\\"approve transfer\\\" transaction.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"estimateShutDownFund\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fundAddress\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Executes the \\\"approve transfer\\\" transaction with the given gas price per unit.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"executeApproveTransfer\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Unsigned transaction data.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fundAddress\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"investmentAmount\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Estimates the number of gas units required for the \\\"trigger reward all fees\\\" transaction.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"estimateTriggerRewardAllFees\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fundAddress\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Executes the \\\"trigger reward all fees\\\" transaction with the given gas price per unit.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"executeTriggerRewardAllFees\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Unsigned transaction data.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"fundAddress\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Estimates the number of gas units required for the \\\"make order\\\" transaction.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"estimateMakeOrder\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"buyToken\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"buyQuantity\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sellToken\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sellQuantity\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Executes the \\\"make order\\\" transaction with the given gas price per unit.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"executeMakeOrder\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Unsigned transaction data.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Order\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Estimates the number of gas units required for the \\\"cancel order\\\" transaction.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"estimateCancelOrder\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"buyToken\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sellToken\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Executes the \\\"cancel order\\\" transaction with the given gas price per unit.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"executeCancelOrder\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Unsigned transaction data.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"estimateDeployUserWhitelist\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"addresses\"},\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"estimateDeployAssetBlacklist\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"symbols\"},\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"estimateDeployAssetWhitelist\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"symbols\"},\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"estimateDeployMaxConcentration\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"percent\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"estimateDeployMaxPositions\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"positions\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"estimateDeployPriceTolerance\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"percent\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"executeDeploy\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"estimateRegisterPolicies\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policies\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyInput\"}}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransaction\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"executeRegisterPolicies\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"unsigned\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UnsignedTransactionInput\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Export the currently active wallet in its encrypted form.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"exportWallet\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The password for decrypting the wallet.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"password\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Log out of the current wallet and delete its encrypted representation\\nfrom local storage. This requires the user to either re-upload the\\nencrypted wallet or restore it from its mnemonic when attempting to\\nlog in again.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"deleteWallet\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Log in to a previously stored wallet. Returns a list of possible account\\naddresses from the wallet.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"loginWallet\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The password for decrypting the wallet.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"password\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Import and log in to wallet using a wallet JSON. Within the native app\\nenvironment, this will cause the encrypted wallet to be stored locally\\nfor future use.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"importWallet\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The encrypted wallet.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"wallet\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The password for decrypting the wallet.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"password\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Restore and login to a wallet using a mnemonic. Within the native app\\nenvironment,this will cause the encrypted wallet to be stored locally\\nfor future use.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"restoreWallet\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The mnemonic to restore the wallet with.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"mnemonic\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"The password for decrypting the wallet.\",\"block\":false},\"name\":{\"kind\":\"Name\",\"value\":\"password\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"description\":{\"kind\":\"StringValue\",\"value\":\"Randomly generate a new mnemonic phrase.\",\"block\":true},\"name\":{\"kind\":\"Name\",\"value\":\"generateMnemonic\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Subscription\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"currentBlock\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"nodeSynced\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"priceFeedUp\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"peerCount\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"symbol\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"address\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]}]},{\"kind\":\"SchemaDefinition\",\"directives\":[],\"operationTypes\":[{\"kind\":\"OperationTypeDefinition\",\"operation\":\"query\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"}}},{\"kind\":\"OperationTypeDefinition\",\"operation\":\"subscription\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Subscription\"}}},{\"kind\":\"OperationTypeDefinition\",\"operation\":\"mutation\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Mutation\"}}}]}],\"loc\":{\"start\":0,\"end\":12085}};\n    doc.loc.source = {\"body\":\"# Fields that are only safe within the native app environment and are blocked\\n# from execution in the hosted / web environment.\\ndirective @authenticated on FIELD\\ndirective @sign(source: String = \\\"unsigned\\\", target: String = \\\"signed\\\") on FIELD\\ndirective @account(arg: String = \\\"from\\\") on FIELD\\n\\nscalar DateTime\\n\\nenum ExchangeEnum {\\n  RADAR_RELAY\\n  OASIS_DEX\\n  KYBER_NETWORK\\n  ETHFINEX\\n}\\n\\nenum OrderTypeEnum {\\n  ASK\\n  BID\\n}\\n\\nenum FundSetupStepEnum {\\n  CREATE_ACCOUNTING\\n  CREATE_FEE_MANAGER\\n  CREATE_PARTICIPATION\\n  CREATE_POLICY_MANAGER\\n  CREATE_SHARES\\n  CREATE_TRADING\\n  CREATE_VAULT\\n}\\n\\nenum PolicyTypeEnum {\\n  TRADE\\n  INVEST\\n}\\n\\ninterface Order {\\n  id: String\\n  trade: Price!\\n  price: String\\n  volume: String!\\n  type: OrderTypeEnum!\\n  exchange: ExchangeEnum!\\n}\\n\\ntype EthfinexOrder implements Order {\\n  id: String\\n  trade: Price!\\n  price: String\\n  volume: String!\\n  type: OrderTypeEnum!\\n  exchange: ExchangeEnum!\\n}\\n\\ntype ZeroExOrder implements Order {\\n  id: String\\n  trade: Price!\\n  price: String\\n  volume: String!\\n  type: OrderTypeEnum!\\n  exchange: ExchangeEnum!\\n  metadata: ZeroExOrderMetadata\\n}\\n\\ntype OasisDexOrder implements Order {\\n  id: String\\n  trade: Price!\\n  price: String\\n  volume: String!\\n  type: OrderTypeEnum!\\n  exchange: ExchangeEnum!\\n  metadata: OasisDexOrderMetadata\\n}\\n\\ntype KyberNetworkOrder implements Order {\\n  id: String\\n  trade: Price!\\n  price: String\\n  volume: String!\\n  type: OrderTypeEnum!\\n  exchange: ExchangeEnum!\\n}\\n\\ntype ZeroExOrderMetadata {\\n  exchangeAddress: String\\n  senderAddress: String\\n  makerAddress: String\\n  takerAddress: String\\n  makerAssetData: String\\n  takerAssetData: String\\n  feeRecipientAddress: String\\n  makerAssetAmount: String\\n  takerAssetAmount: String\\n  makerFee: String\\n  takerFee: String\\n  expirationTimeSeconds: Int\\n  signature: String\\n  salt: String\\n}\\n\\ntype OasisDexOrderMetadata {\\n  id: String!\\n  maker: String\\n  taker: String\\n  isActive: Boolean!\\n  exchangeContractAddress: String\\n}\\n\\ntype Price {\\n  base: Quantity\\n  quote: Quantity\\n}\\n\\ntype Quantity {\\n  token: Token\\n  quantity: String\\n}\\n\\ntype Token {\\n  symbol: String\\n  decimals: Int\\n  address: String\\n}\\n\\ntype Ranking {\\n  id: String\\n  rank: Int\\n  address: String\\n  name: String\\n  inception: DateTime\\n  fund: Fund\\n  sharePrice: Price\\n}\\n\\ntype Routes {\\n  accountingAddress: String\\n  feeManagerAddress: String\\n  participationAddress: String\\n  policyManagerAddress: String\\n  priceSourceAddress: String\\n  registryAddress: String\\n  sharesAddress: String\\n  tradingAddress: String\\n  vaultAddress: String\\n  versionAddress: String\\n}\\n\\ntype Fund {\\n  id: String\\n  rank: Int\\n  address: String\\n  name: String\\n  inception: DateTime\\n  gav: Quantity\\n  nav: Quantity\\n  owner: String\\n  routes: Routes\\n  denominationAsset: Token\\n  nativeAsset: Token\\n  holdings: [Holding]\\n  sharePrice: Price\\n  totalSupply: Quantity\\n  personalStake(investor: String): Quantity\\n  managementReward: Quantity\\n  managementFeeRate: String\\n  performanceReward: Quantity\\n  performanceFeeRate: String\\n  unclaimedFees: Quantity\\n  feesShareQuantity: Quantity\\n  isShutdown: Boolean\\n  isComplete: Boolean\\n}\\n\\ntype Holding {\\n  balance: Quantity!\\n  price: Price!\\n  fraction: String!\\n}\\n\\ntype Trade {\\n  price: Price\\n  quantity: Quantity\\n  timestamp: String\\n  type: String\\n}\\n\\ntype Signature {\\n  r: String!\\n  s: String!\\n  v: Int!\\n}\\n\\ntype ExchangeConfig {\\n  adapterAddress: String!\\n  exchangeAddress: String!\\n  takesCustody: Boolean!\\n}\\n\\ntype AdapterAddresses {\\n  kyberAdapter: String!\\n  matchingMarketAdapter: String!\\n  zeroExAdapter: String!\\n}\\n\\ntype PolicyAddresses {\\n  priceTolerance: String!\\n  userWhitelist: String!\\n}\\n\\ntype FactoryAddresses {\\n  accountingFactory: String!\\n  feeManagerFactory: String!\\n  participationFactory: String!\\n  policyManagerFactory: String!\\n  sharesFactory: String!\\n  tradingFactory: String!\\n  vaultFactory: String!\\n}\\n\\ntype ThirdPartyContracts {\\n  exchanges: [ExchangeConfig]!\\n  tokens: [Token]!\\n}\\n\\ntype MelonContracts {\\n  priceSource: String!\\n  adapters: AdapterAddresses!\\n  policies: PolicyAddresses!\\n  engine: String!\\n  registry: String!\\n  version: String!\\n  ranking: String!\\n}\\n\\ntype Deployment {\\n  melonContracts: MelonContracts!\\n  thirdPartyContracts: ThirdPartyContracts!\\n  version: String\\n  ranking: String\\n  tokens: [Token]\\n}\\n\\ntype UnsignedTransaction {\\n  data: String\\n  from: String\\n  gas: String\\n  gasPrice: String\\n  to: String\\n  value: String\\n}\\n\\ninput UnsignedTransactionInput {\\n  data: String\\n  from: String\\n  gas: String\\n  gasPrice: String\\n  to: String\\n  value: String\\n}\\n\\ninput PolicyInput {\\n  address: String!\\n  type: PolicyTypeEnum!\\n}\\n\\ntype Query {\\n  defaultAccount: String\\n  allAccounts: [String]\\n  hasStoredWallet: Boolean\\n\\n  \\\"Fetch the associated fund of an account.\\\"\\n  associatedFund(\\n    \\\"The address of the account to load the fund for.\\\"\\n    manager: String\\n  ): String\\n\\n  \\\"Loads a fund by its name.\\\"\\n  fundByName(\\\"The name of the fund to load.\\\" name: String!): Fund\\n\\n  network: String\\n  currentBlock: String\\n  nodeSynced: Boolean\\n  priceFeedUp: Boolean\\n  peerCount: String\\n  contractDeployment: Deployment\\n  totalFunds: Int\\n  balance(symbol: String!, address: String): Quantity\\n  fund(address: String!): Fund\\n  rankings: [Ranking]\\n  orders(exchange: ExchangeEnum!, base: String!, quote: String!): [Order]\\n\\n  \\\"Loads the current routes for fund creation for a fund manager address.\\\"\\n  routes(\\\"The address of the fund manager.\\\" manager: String): Routes\\n}\\n\\ntype Mutation {\\n  # TODO: Give more fund configuration options: Policies, pricefeed, ...\\n  \\\"\\\"\\\"\\n  Estimates the number of gas units required for the \\\"beginSetup\\\" transaction.\\n  \\\"\\\"\\\"\\n  estimateFundSetupBegin(\\n    name: String!\\n    exchanges: [String]!\\n    performanceFee: Float!\\n    managementFee: Float!\\n  ): UnsignedTransaction\\n\\n  \\\"\\\"\\\"\\n  Executes the \\\"beginSetup\\\" transaction with the given gas price per unit.\\n  \\\"\\\"\\\"\\n  executeFundSetupBegin(\\n    \\\"Unsigned transaction data.\\\"\\n    unsigned: UnsignedTransactionInput!\\n  ): String\\n\\n  \\\"\\\"\\\"\\n  Estimates the number of gas units required for a fund setup step transaction.\\n  \\\"\\\"\\\"\\n  estimateFundSetupStep(\\n    \\\"The step in the fund factory process.\\\"\\n    step: FundSetupStepEnum!\\n  ): UnsignedTransaction\\n\\n  \\\"\\\"\\\"\\n  Executes a fund setup step transaction with the given gas price per unit.\\n  \\\"\\\"\\\"\\n  executeFundSetupStep(\\n    \\\"Unsigned transaction data.\\\"\\n    unsigned: UnsignedTransactionInput!\\n    \\\"The step in the fund factory process.\\\"\\n    step: FundSetupStepEnum!\\n  ): Boolean\\n\\n  \\\"\\\"\\\"\\n  Estimates the number of gas units required for the \\\"completeSetup\\\" transaction.\\n  \\\"\\\"\\\"\\n  estimateFundSetupComplete: UnsignedTransaction\\n\\n  \\\"\\\"\\\"\\n  Executes the \\\"completeSetup\\\" transaction with the given gas price per unit.\\n  \\\"\\\"\\\"\\n  executeFundSetupComplete(\\n    \\\"Unsigned transaction data.\\\"\\n    unsigned: UnsignedTransactionInput!\\n  ): String\\n\\n  \\\"\\\"\\\"\\n  Estimates the number of gas units required for the \\\"request investment\\\" transaction.\\n  \\\"\\\"\\\"\\n  estimateRequestInvestment(\\n    fundAddress: String!\\n    investmentAmount: String!\\n  ): UnsignedTransaction\\n\\n  \\\"\\\"\\\"\\n  Executes the \\\"request investment\\\" transaction with the given gas price per unit.\\n  \\\"\\\"\\\"\\n  executeRequestInvestment(\\n    \\\"Unsigned transaction data.\\\"\\n    unsigned: UnsignedTransactionInput!\\n    fundAddress: String!\\n  ): Boolean\\n\\n  \\\"\\\"\\\"\\n  Estimates the number of gas units required for the \\\"execute request\\\" transaction.\\n  \\\"\\\"\\\"\\n  estimateExecuteRequest(fundAddress: String!): UnsignedTransaction\\n\\n  \\\"\\\"\\\"\\n  Executes the \\\"execute request\\\" transaction with the given gas price per unit.\\n  \\\"\\\"\\\"\\n  executeExecuteRequest(\\n    \\\"Unsigned transaction data.\\\"\\n    unsigned: UnsignedTransactionInput!\\n    fundAddress: String!\\n  ): Boolean\\n\\n  \\\"\\\"\\\"\\n  Estimates the number of gas units required for the \\\"approve transfer\\\" transaction.\\n  \\\"\\\"\\\"\\n  estimateApproveTransfer(\\n    fundAddress: String!\\n    investmentAmount: String!\\n  ): UnsignedTransaction\\n\\n  \\\"\\\"\\\"\\n  Executes the \\\"execute request\\\" transaction with the given gas price per unit.\\n  \\\"\\\"\\\"\\n  executeShutDownFund(\\n    \\\"Unsigned transaction data.\\\"\\n    unsigned: UnsignedTransactionInput!\\n    fundAddress: String!\\n  ): Boolean\\n\\n  \\\"\\\"\\\"\\n  Estimates the number of gas units required for the \\\"approve transfer\\\" transaction.\\n  \\\"\\\"\\\"\\n  estimateShutDownFund(fundAddress: String!): UnsignedTransaction\\n\\n  \\\"\\\"\\\"\\n  Executes the \\\"approve transfer\\\" transaction with the given gas price per unit.\\n  \\\"\\\"\\\"\\n  executeApproveTransfer(\\n    \\\"Unsigned transaction data.\\\"\\n    unsigned: UnsignedTransactionInput!\\n    fundAddress: String!\\n    investmentAmount: String!\\n  ): Boolean\\n\\n  \\\"\\\"\\\"\\n  Estimates the number of gas units required for the \\\"trigger reward all fees\\\" transaction.\\n  \\\"\\\"\\\"\\n  estimateTriggerRewardAllFees(fundAddress: String!): UnsignedTransaction\\n\\n  \\\"\\\"\\\"\\n  Executes the \\\"trigger reward all fees\\\" transaction with the given gas price per unit.\\n  \\\"\\\"\\\"\\n  executeTriggerRewardAllFees(\\n    \\\"Unsigned transaction data.\\\"\\n    unsigned: UnsignedTransactionInput!\\n    fundAddress: String!\\n  ): Quantity\\n\\n  \\\"\\\"\\\"\\n  Estimates the number of gas units required for the \\\"make order\\\" transaction.\\n  \\\"\\\"\\\"\\n  estimateMakeOrder(\\n    exchange: ExchangeEnum!\\n    buyToken: String!\\n    buyQuantity: String!\\n    sellToken: String!\\n    sellQuantity: String!\\n  ): UnsignedTransaction\\n\\n  \\\"\\\"\\\"\\n  Executes the \\\"make order\\\" transaction with the given gas price per unit.\\n  \\\"\\\"\\\"\\n  executeMakeOrder(\\n    \\\"Unsigned transaction data.\\\"\\n    unsigned: UnsignedTransactionInput!\\n    exchange: ExchangeEnum!\\n  ): Order\\n\\n  \\\"\\\"\\\"\\n  Estimates the number of gas units required for the \\\"cancel order\\\" transaction.\\n  \\\"\\\"\\\"\\n  # TODO: Same signature for all exchanges\\n  estimateCancelOrder(\\n    exchange: ExchangeEnum!\\n    id: String!\\n    buyToken: String!\\n    sellToken: String!\\n  ): UnsignedTransaction\\n\\n  \\\"\\\"\\\"\\n  Executes the \\\"cancel order\\\" transaction with the given gas price per unit.\\n  \\\"\\\"\\\"\\n  executeCancelOrder(\\n    \\\"Unsigned transaction data.\\\"\\n    unsigned: UnsignedTransactionInput!\\n    exchange: ExchangeEnum!\\n  ): Boolean\\n\\n  # Policies\\n  estimateDeployUserWhitelist(addresses: [String]): UnsignedTransaction\\n  estimateDeployAssetBlacklist(symbols: [String]): UnsignedTransaction\\n  estimateDeployAssetWhitelist(symbols: [String]): UnsignedTransaction\\n  estimateDeployMaxConcentration(percent: Float): UnsignedTransaction\\n  estimateDeployMaxPositions(positions: Int): UnsignedTransaction\\n  estimateDeployPriceTolerance(percent: Int): UnsignedTransaction\\n  executeDeploy(unsigned: UnsignedTransactionInput): String\\n\\n  estimateRegisterPolicies(policies: [PolicyInput]!): UnsignedTransaction\\n  executeRegisterPolicies(unsigned: UnsignedTransactionInput): Boolean\\n\\n  \\\"\\\"\\\"\\n  Export the currently active wallet in its encrypted form.\\n  \\\"\\\"\\\"\\n  exportWallet(\\n    \\\"The password for decrypting the wallet.\\\"\\n    password: String!\\n  ): String\\n\\n  \\\"\\\"\\\"\\n  Log out of the current wallet and delete its encrypted representation\\n  from local storage. This requires the user to either re-upload the\\n  encrypted wallet or restore it from its mnemonic when attempting to\\n  log in again.\\n  \\\"\\\"\\\"\\n  deleteWallet: Boolean!\\n\\n  \\\"\\\"\\\"\\n  Log in to a previously stored wallet. Returns a list of possible account\\n  addresses from the wallet.\\n  \\\"\\\"\\\"\\n  loginWallet(\\n    \\\"The password for decrypting the wallet.\\\"\\n    password: String!\\n  ): [String]\\n\\n  \\\"\\\"\\\"\\n  Import and log in to wallet using a wallet JSON. Within the native app\\n  environment, this will cause the encrypted wallet to be stored locally\\n  for future use.\\n  \\\"\\\"\\\"\\n  importWallet(\\n    \\\"The encrypted wallet.\\\"\\n    wallet: String!\\n    \\\"The password for decrypting the wallet.\\\"\\n    password: String!\\n  ): [String]\\n\\n  \\\"\\\"\\\"\\n  Restore and login to a wallet using a mnemonic. Within the native app\\n  environment,this will cause the encrypted wallet to be stored locally\\n  for future use.\\n  \\\"\\\"\\\"\\n  restoreWallet(\\n    \\\"The mnemonic to restore the wallet with.\\\"\\n    mnemonic: String!\\n    \\\"The password for decrypting the wallet.\\\"\\n    password: String!\\n  ): [String]\\n\\n  \\\"\\\"\\\"\\n  Randomly generate a new mnemonic phrase.\\n  \\\"\\\"\\\"\\n  generateMnemonic: String\\n}\\n\\ntype Subscription {\\n  currentBlock: String\\n  nodeSynced: Boolean\\n  priceFeedUp: Boolean\\n  peerCount: String\\n  balance(symbol: String!, address: String): Quantity\\n}\\n\\nschema {\\n  query: Query\\n  subscription: Subscription\\n  mutation: Mutation\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","import {\n  switchMap,\n  throttleTime,\n  distinctUntilKeyChanged,\n} from 'rxjs/operators';\n\nfunction currentPeers(environment, block$) {\n  return block$.pipe(\n    distinctUntilKeyChanged('number'),\n    throttleTime(5000),\n    switchMap(() => environment.eth.net.getPeerCount().then(a => {\n      console.log(a);\n      return a;\n    })),\n  );\n}\n\nexport default currentPeers;\n","import * as Rx from 'rxjs';\nimport {\n  distinctUntilKeyChanged,\n  throttleTime,\n  timeout,\n  retryWhen,\n  delay,\n  concatMap,\n} from 'rxjs/operators';\nimport { getFundDetails } from '@melonproject/protocol';\n\nconst requestRanking = (environment, rankingAddress, versionAddress) => {\n  return Rx.from(\n    getFundDetails(environment, rankingAddress, versionAddress),\n  ).pipe(\n    timeout(3000),\n    retryWhen(errors => errors.pipe(delay(1000))),\n  );\n};\n\nconst currentRanking = (environment, block$) => {\n  const throttled$ = block$.pipe(\n    distinctUntilKeyChanged('number'),\n    throttleTime(5000),\n  );\n\n  return throttled$.pipe(\n    concatMap(() => {\n      return requestRanking(\n        environment,\n        environment.deployment.melonContracts.ranking,\n        environment.deployment.melonContracts.version,\n      );\n    }),\n  );\n};\n\nexport default currentRanking;\n","import * as Rx from 'rxjs';\nimport {\n  distinctUntilKeyChanged,\n  throttleTime,\n  timeout,\n  retryWhen,\n  delay,\n  concatMap,\n} from 'rxjs/operators';\nimport { getQuoteToken, hasValidPrice } from '@melonproject/protocol';\n\nconst requestHasRecentPrice = environment => {\n  return Rx.defer(async () => {\n    const address = environment.deployment.melonContracts.priceSource;\n    const token = await getQuoteToken(environment, address);\n    return hasValidPrice(environment, address, token);\n  }).pipe(\n    timeout(2000),\n    retryWhen(errors => errors.pipe(delay(1000))),\n  );\n};\n\nconst hasRecentPrice = (environment, block$) => {\n  const throttled$ = block$.pipe(\n    distinctUntilKeyChanged('number'),\n    throttleTime(5000),\n  );\n\n  return throttled$.pipe(concatMap(() => requestHasRecentPrice(environment)));\n};\n\nexport default hasRecentPrice;\n","import * as R from 'ramda';\n\nconst resolveNetwork = R.cond([\n  [R.equals(42), R.always('KOVAN')],\n  [R.equals(1), R.always('LIVE')],\n  [R.T, R.always('DEV')],\n]);\n\nexport default resolveNetwork;\n","const sameBlock = (a, b) => {\n  return a.toString() === b.toString();\n};\n\nexport default sameBlock;\n","import * as Rx from 'rxjs';\n\nconst subscribeBlock = environment => {\n  const current = environment.eth.getBlock('latest');\n  const subscription = environment.eth.subscribe('newBlockHeaders');\n  return Rx.concat(Rx.from(current), Rx.fromEvent(subscription, 'data'));\n};\n\nexport default subscribeBlock;\n","import * as Rx from 'rxjs';\n\nconst subscribeSyncing = environment => {\n  const current = environment.eth.isSyncing();\n  const subscription = environment.eth.subscribe('syncing');\n  return Rx.concat(Rx.from(current), Rx.fromEvent(subscription, 'data'));\n};\n\nexport default subscribeSyncing;\n","import { take, timeout } from 'rxjs/operators';\n\nconst takeLast = (stream$, wait = 5000) =>\n  new Promise((resolve, reject) => {\n    stream$\n      .pipe(\n        take(1),\n        timeout(wait),\n      )\n      .subscribe(resolve, reject);\n  });\n\nexport default takeLast;\n","import { $$asyncIterator } from 'iterall';\nimport * as Rx from 'rxjs';\n\nfunction toAsyncIterator(observable$: Rx.Observable<any>) {\n  const promiseCapability = () => {\n    const x = {};\n\n    x.promise = new Promise((a, b) => {\n      x.resolve = a;\n      x.reject = b;\n    });\n\n    return x;\n  };\n\n  let promise = promiseCapability();\n  const subscription = observable$.subscribe(\n    value => {\n      promise.resolve({ value, done: false });\n      promise = promiseCapability();\n    },\n    error => {\n      promise.reject(error);\n    },\n    () => {\n      promise.resolve({ value: undefined, done: true });\n    },\n  );\n\n  return {\n    next() {\n      return promise.promise;\n    },\n    return() {\n      subscription.unsubscribe();\n      return Promise.resolve({ value: undefined, done: true });\n    },\n    throw(error) {\n      subscription.unsubscribe();\n      return Promise.reject(error);\n    },\n    [$$asyncIterator]() {\n      return this;\n    },\n  };\n}\n\nexport default toAsyncIterator;\n","import * as Rx from 'rxjs';\nimport { createAsyncIterator, forAwaitEach, isAsyncIterable } from 'iterall';\nimport { ApolloLink, FetchResult, Observable, execute as executeLink } from 'apollo-link';\nimport { parse, execute, subscribe, GraphQLSchema, ExecutionResult } from 'graphql';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { SerializableGraphQLRequest } from './types';\n\nexport interface IpcExecutorOptions {\n  link: ApolloLink;\n  ipc: any;\n  channel?: string;\n}\n\nconst isSubscription = (query) => {\n  const main = getMainDefinition(query);\n  return main.kind === 'OperationDefinition' && main.operation === 'subscription';\n};\n\nexport interface SchemaLinkOptions {\n  schema: GraphQLSchema;\n  context?: any;\n}\n\ntype Executor = typeof execute | typeof subscribe;\n\nexport const createSchemaLink = (options: SchemaLinkOptions) => new ApolloLink(request => {\n  return new Observable<FetchResult>(observer => {\n    const executor: Executor = isSubscription(request.query) ? subscribe : execute;\n    const context = typeof options.context === 'function'\n      ? options.context(request)\n      : options.context;\n\n    const result = (executor as any)(\n      options.schema,\n      request.query,\n      null,\n      context,\n      request.variables,\n      request.operationName,\n    );\n\n    Promise.resolve(result).then((data) => {\n      const iterable = isAsyncIterable(data) ? data : createAsyncIterator([data]);\n\n      forAwaitEach(iterable as any, (value: ExecutionResult) => {\n        observer.next(value);\n      }).then(() => {\n        observer.complete();\n      }).catch((error) => {\n        observer.error(error);\n      });\n    }).catch(error => observer.error(error));\n  });\n});\n\nexport const createIpcExecutor = (options: IpcExecutorOptions) => {\n  const channel = options.channel || 'graphql';\n\n  options.ipc.on(channel, (event, id, request: SerializableGraphQLRequest) => {\n    const result$ = new Rx.Observable<FetchResult>(observer => {\n      const result: Observable<FetchResult> = executeLink(options.link, {\n        ...request,\n        query: parse(request.query),\n      });\n\n      return result.subscribe(\n        data => observer.next(data),\n        error => observer.error(error),\n        () => observer.complete(),\n      );\n    });\n\n    return result$.subscribe(\n      data => event.sender.send(channel, id, 'data', data),\n      error => event.sender.send(channel, id, 'error', error),\n      () => event.sender.send(channel, id, 'complete'),\n    );\n  });\n};\n","module.exports = require(\"@melonproject/exchange-aggregator\");","module.exports = require(\"@melonproject/ganache-cli\");","module.exports = require(\"@melonproject/protocol\");","module.exports = require(\"@melonproject/protocol/lib/contracts/dependencies/token/calls/getToken\");","module.exports = require(\"@melonproject/protocol/lib/contracts/exchanges/transactions/makeOrderFromAccountOasisDex\");","module.exports = require(\"@melonproject/protocol/lib/contracts/fund/accounting/calls/getNativeToken\");","module.exports = require(\"@melonproject/protocol/lib/contracts/fund/accounting/calls/performCalculations\");","module.exports = require(\"@melonproject/protocol/lib/contracts/fund/hub/calls/getCreationTime\");","module.exports = require(\"@melonproject/protocol/lib/contracts/fund/hub/calls/isShutDown\");","module.exports = require(\"@melonproject/protocol/lib/utils/environment/getTokenByAddress\");","module.exports = require(\"@melonproject/protocol/lib/utils/environment/getTokenBySymbol\");","module.exports = require(\"@melonproject/token-math\");","module.exports = require(\"apollo-link\");","module.exports = require(\"apollo-utilities\");","module.exports = require(\"bip39\");","module.exports = require(\"dataloader\");","module.exports = require(\"devtron\");","module.exports = require(\"electron\");","module.exports = require(\"electron-debug\");","module.exports = require(\"electron-devtools-installer\");","module.exports = require(\"electron-is-dev\");","module.exports = require(\"ethers-wallet\");","module.exports = require(\"fs\");","module.exports = require(\"graphql\");","module.exports = require(\"graphql-iso-date\");","module.exports = require(\"graphql-tools\");","module.exports = require(\"graphql/execution\");","module.exports = require(\"graphql/language\");","module.exports = require(\"http\");","module.exports = require(\"keytar\");","module.exports = require(\"memoize-one\");","module.exports = require(\"next\");","module.exports = require(\"path\");","module.exports = require(\"ramda\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"url\");","module.exports = require(\"web3-eth-accounts\");"],"sourceRoot":""}