// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Setup should render correctly 1`] = `
<WithFormik(Function)
  config={
    Object {
      "canonicalPriceFeedAddress": "foo",
      "competitionComplianceAddress": "bar",
      "onlyManagerCompetitionAddress": "foo",
    }
  }
  initialValues={
    Object {
      "name": "",
    }
  }
  onSubmit={[MockFunction]}
>
  <Formik
    config={
      Object {
        "canonicalPriceFeedAddress": "foo",
        "competitionComplianceAddress": "bar",
        "onlyManagerCompetitionAddress": "foo",
      }
    }
    enableReinitialize={true}
    handleSubmit={[Function]}
    initialValues={
      Object {
        "name": "",
      }
    }
    isInitialValid={false}
    onSubmit={[Function]}
    render={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
    validationSchema={[Function]}
  >
    <Component
      config={
        Object {
          "canonicalPriceFeedAddress": "foo",
          "competitionComplianceAddress": "bar",
          "onlyManagerCompetitionAddress": "foo",
        }
      }
      dirty={false}
      errors={Object {}}
      handleBlur={[Function]}
      handleChange={[Function]}
      handleReset={[Function]}
      handleSubmit={[Function]}
      initialValues={
        Object {
          "name": "",
        }
      }
      isSubmitting={false}
      isValid={false}
      isValidating={false}
      onSubmit={[MockFunction]}
      registerField={[Function]}
      resetForm={[Function]}
      setError={[Function]}
      setErrors={[Function]}
      setFieldError={[Function]}
      setFieldTouched={[Function]}
      setFieldValue={[Function]}
      setFormikState={[Function]}
      setStatus={[Function]}
      setSubmitting={[Function]}
      setTouched={[Function]}
      setValues={[Function]}
      submitCount={0}
      submitForm={[Function]}
      touched={Object {}}
      unregisterField={[Function]}
      validateField={[Function]}
      validateForm={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
      values={
        Object {
          "name": "",
        }
      }
    >
      <div
        className="jsx-__scopedHash setup"
      >
        <JSXStyle
          css="__scoped"
          styleId="__scopedHash"
        />
        <h3
          className="jsx-__scopedHash"
        >
          Setup your fund
        </h3>
        <Form
          onSubmit={[Function]}
        >
          <form
            className="form"
            onSubmit={[Function]}
          >
            <Input
              name="name"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="Fund name"
              required={true}
              type="text"
              value=""
            >
              <div
                className="jsx-__scopedHash input"
              >
                <JSXStyle
                  css="__scoped"
                  styleId="__scopedHash"
                />
                <input
                  className="jsx-__scopedHash input__field"
                  name="name"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Fund name"
                  type="text"
                  value=""
                />
                <div
                  className="jsx-__scopedHash input__error"
                />
              </div>
            </Input>
            <h4
              className="jsx-__scopedHash"
            >
              Melon Default Configuration:
            </h4>
            <p
              className="jsx-__scopedHash"
            >
              For this version, the modules that your fund will use are predefined ie. you do not need to choose a module. For your record, below are the predefined modules for this version.
            </p>
            <div
              className="jsx-__scopedHash setup__exchanges"
            >
              <h4
                className="jsx-__scopedHash"
              >
                Exchange:
              </h4>
              <div
                className="jsx-__scopedHash setup__exchanges-checkbox"
              >
                <Checkbox
                  defaultChecked={true}
                  disabled={true}
                  name="exchanges"
                  text="OasisDex"
                  value="OasisDex"
                >
                  <label
                    className="jsx-__scopedHash checkbox"
                  >
                    <JSXStyle
                      css="__scoped"
                      styleId="__scopedHash"
                    />
                    <input
                      className="jsx-__scopedHash checkbox__input"
                      defaultChecked={true}
                      disabled={true}
                      name="exchanges"
                      type="checkbox"
                      value="OasisDex"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__checkmark"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__text"
                    >
                      OasisDex
                    </span>
                  </label>
                </Checkbox>
              </div>
              <div
                className="jsx-__scopedHash setup__exchanges-checkbox"
              >
                <Checkbox
                  defaultChecked={true}
                  disabled={true}
                  name="exchanges"
                  text="0x relayers"
                  value="0x relayers"
                >
                  <label
                    className="jsx-__scopedHash checkbox"
                  >
                    <JSXStyle
                      css="__scoped"
                      styleId="__scopedHash"
                    />
                    <input
                      className="jsx-__scopedHash checkbox__input"
                      defaultChecked={true}
                      disabled={true}
                      name="exchanges"
                      type="checkbox"
                      value="0x relayers"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__checkmark"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__text"
                    >
                      0x relayers
                    </span>
                  </label>
                </Checkbox>
              </div>
            </div>
            <div
              className="jsx-__scopedHash setup__info"
            >
              Pricefeed:
               
              <a
                className="jsx-__scopedHash"
                href="https://etherscan.io/address/foo"
                rel="noopener noreferrer"
                target="_blank"
              >
                <strong
                  className="jsx-__scopedHash"
                >
                  Canonical PriceFeed
                </strong>
              </a>
              <br
                className="jsx-__scopedHash"
              />
              Asset Registrar: 
              <strong
                className="jsx-__scopedHash"
              >
                Melon 
                Naxos
                 Asset Universe
              </strong>
              <div
                className="jsx-__scopedHash"
              >
                Compliance (invest/redeem):
                 
                <a
                  className="jsx-__scopedHash"
                  href="https://etherscan.io/address/foo"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <strong
                    className="jsx-__scopedHash"
                  >
                    Only manager can invest (in WETH)
                  </strong>
                </a>
              </div>
              Risk Management: 
              <strong
                className="jsx-__scopedHash"
              >
                Disabled (all trades allowed)
              </strong>
            </div>
            <Button
              type="submit"
            >
              <button
                className="jsx-__scopedHash button button--medium button--primary"
                onClick={[Function]}
                type="submit"
              >
                <JSXStyle
                  css="__scoped"
                  styleId="__scopedHash"
                />
                Create and deploy my fund!
              </button>
            </Button>
          </form>
        </Form>
      </div>
    </Component>
  </Formik>
</WithFormik(Function)>
`;

exports[`Setup should render correctly with isCompetition 1`] = `
<WithFormik(Function)
  config={
    Object {
      "canonicalPriceFeedAddress": "foo",
      "competitionComplianceAddress": "bar",
      "onlyManagerCompetitionAddress": "foo",
    }
  }
  initialValues={
    Object {
      "name": "",
    }
  }
  isCompetition={true}
  onSubmit={[MockFunction]}
>
  <Formik
    config={
      Object {
        "canonicalPriceFeedAddress": "foo",
        "competitionComplianceAddress": "bar",
        "onlyManagerCompetitionAddress": "foo",
      }
    }
    enableReinitialize={true}
    handleSubmit={[Function]}
    initialValues={
      Object {
        "name": "",
      }
    }
    isCompetition={true}
    isInitialValid={false}
    onSubmit={[Function]}
    render={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
    validationSchema={[Function]}
  >
    <Component
      config={
        Object {
          "canonicalPriceFeedAddress": "foo",
          "competitionComplianceAddress": "bar",
          "onlyManagerCompetitionAddress": "foo",
        }
      }
      dirty={false}
      errors={Object {}}
      handleBlur={[Function]}
      handleChange={[Function]}
      handleReset={[Function]}
      handleSubmit={[Function]}
      initialValues={
        Object {
          "name": "",
        }
      }
      isCompetition={true}
      isSubmitting={false}
      isValid={false}
      isValidating={false}
      onSubmit={[MockFunction]}
      registerField={[Function]}
      resetForm={[Function]}
      setError={[Function]}
      setErrors={[Function]}
      setFieldError={[Function]}
      setFieldTouched={[Function]}
      setFieldValue={[Function]}
      setFormikState={[Function]}
      setStatus={[Function]}
      setSubmitting={[Function]}
      setTouched={[Function]}
      setValues={[Function]}
      submitCount={0}
      submitForm={[Function]}
      touched={Object {}}
      unregisterField={[Function]}
      validateField={[Function]}
      validateForm={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
      values={
        Object {
          "name": "",
        }
      }
    >
      <div
        className="jsx-__scopedHash setup"
      >
        <JSXStyle
          css="__scoped"
          styleId="__scopedHash"
        />
        <h3
          className="jsx-__scopedHash"
        >
          Setup your fund
        </h3>
        <Form
          onSubmit={[Function]}
        >
          <form
            className="form"
            onSubmit={[Function]}
          >
            <Input
              name="name"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="Fund name"
              required={true}
              type="text"
              value=""
            >
              <div
                className="jsx-__scopedHash input"
              >
                <JSXStyle
                  css="__scoped"
                  styleId="__scopedHash"
                />
                <input
                  className="jsx-__scopedHash input__field"
                  name="name"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Fund name"
                  type="text"
                  value=""
                />
                <div
                  className="jsx-__scopedHash input__error"
                />
              </div>
            </Input>
            <h4
              className="jsx-__scopedHash"
            >
              Melon Default Configuration:
            </h4>
            <p
              className="jsx-__scopedHash"
            >
              For this version, the modules that your fund will use are predefined ie. you do not need to choose a module. For your record, below are the predefined modules for this version.
            </p>
            <div
              className="jsx-__scopedHash setup__exchanges"
            >
              <h4
                className="jsx-__scopedHash"
              >
                Exchange:
              </h4>
              <div
                className="jsx-__scopedHash setup__exchanges-checkbox"
              >
                <Checkbox
                  defaultChecked={true}
                  disabled={true}
                  name="exchanges"
                  text="OasisDex"
                  value="OasisDex"
                >
                  <label
                    className="jsx-__scopedHash checkbox"
                  >
                    <JSXStyle
                      css="__scoped"
                      styleId="__scopedHash"
                    />
                    <input
                      className="jsx-__scopedHash checkbox__input"
                      defaultChecked={true}
                      disabled={true}
                      name="exchanges"
                      type="checkbox"
                      value="OasisDex"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__checkmark"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__text"
                    >
                      OasisDex
                    </span>
                  </label>
                </Checkbox>
              </div>
              <div
                className="jsx-__scopedHash setup__exchanges-checkbox"
              >
                <Checkbox
                  defaultChecked={true}
                  disabled={true}
                  name="exchanges"
                  text="0x relayers"
                  value="0x relayers"
                >
                  <label
                    className="jsx-__scopedHash checkbox"
                  >
                    <JSXStyle
                      css="__scoped"
                      styleId="__scopedHash"
                    />
                    <input
                      className="jsx-__scopedHash checkbox__input"
                      defaultChecked={true}
                      disabled={true}
                      name="exchanges"
                      type="checkbox"
                      value="0x relayers"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__checkmark"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__text"
                    >
                      0x relayers
                    </span>
                  </label>
                </Checkbox>
              </div>
            </div>
            <div
              className="jsx-__scopedHash setup__info"
            >
              Pricefeed:
               
              <a
                className="jsx-__scopedHash"
                href="https://etherscan.io/address/foo"
                rel="noopener noreferrer"
                target="_blank"
              >
                <strong
                  className="jsx-__scopedHash"
                >
                  Canonical PriceFeed
                </strong>
              </a>
              <br
                className="jsx-__scopedHash"
              />
              Asset Registrar: 
              <strong
                className="jsx-__scopedHash"
              >
                Melon 
                Naxos
                 Asset Universe
              </strong>
              <div
                className="jsx-__scopedHash"
              >
                Compliance (invest/redeem):
                 
                <a
                  className="jsx-__scopedHash"
                  href="https://etherscan.io/address/bar"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <strong
                    className="jsx-__scopedHash"
                  >
                    Only 
                    Naxos
                     contribution contract can invest
                  </strong>
                </a>
              </div>
              Risk Management: 
              <strong
                className="jsx-__scopedHash"
              >
                Disabled (all trades allowed)
              </strong>
            </div>
            <Button
              type="submit"
            >
              <button
                className="jsx-__scopedHash button button--medium button--primary"
                onClick={[Function]}
                type="submit"
              >
                <JSXStyle
                  css="__scoped"
                  styleId="__scopedHash"
                />
                Create and deploy my fund!
              </button>
            </Button>
          </form>
        </Form>
      </div>
    </Component>
  </Formik>
</WithFormik(Function)>
`;

exports[`Setup should render correctly with loading 1`] = `
<WithFormik(Function)
  config={
    Object {
      "canonicalPriceFeedAddress": "foo",
      "competitionComplianceAddress": "bar",
      "onlyManagerCompetitionAddress": "foo",
    }
  }
  initialValues={
    Object {
      "name": "",
    }
  }
  loading={true}
  onSubmit={[MockFunction]}
>
  <Formik
    config={
      Object {
        "canonicalPriceFeedAddress": "foo",
        "competitionComplianceAddress": "bar",
        "onlyManagerCompetitionAddress": "foo",
      }
    }
    enableReinitialize={true}
    handleSubmit={[Function]}
    initialValues={
      Object {
        "name": "",
      }
    }
    isInitialValid={false}
    loading={true}
    onSubmit={[Function]}
    render={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
    validationSchema={[Function]}
  >
    <Component
      config={
        Object {
          "canonicalPriceFeedAddress": "foo",
          "competitionComplianceAddress": "bar",
          "onlyManagerCompetitionAddress": "foo",
        }
      }
      dirty={false}
      errors={Object {}}
      handleBlur={[Function]}
      handleChange={[Function]}
      handleReset={[Function]}
      handleSubmit={[Function]}
      initialValues={
        Object {
          "name": "",
        }
      }
      isSubmitting={false}
      isValid={false}
      isValidating={false}
      loading={true}
      onSubmit={[MockFunction]}
      registerField={[Function]}
      resetForm={[Function]}
      setError={[Function]}
      setErrors={[Function]}
      setFieldError={[Function]}
      setFieldTouched={[Function]}
      setFieldValue={[Function]}
      setFormikState={[Function]}
      setStatus={[Function]}
      setSubmitting={[Function]}
      setTouched={[Function]}
      setValues={[Function]}
      submitCount={0}
      submitForm={[Function]}
      touched={Object {}}
      unregisterField={[Function]}
      validateField={[Function]}
      validateForm={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
      values={
        Object {
          "name": "",
        }
      }
    >
      <div
        className="jsx-__scopedHash setup"
      >
        <JSXStyle
          css="__scoped"
          styleId="__scopedHash"
        />
        <h3
          className="jsx-__scopedHash"
        >
          Setup your fund
        </h3>
        <p
          className="jsx-__scopedHash"
        >
          Deploying your fund to the Ethereum blockchain
        </p>
        <Form
          onSubmit={[Function]}
        >
          <form
            className="form"
            onSubmit={[Function]}
          >
            <Input
              name="name"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="Fund name"
              required={true}
              type="text"
              value=""
            >
              <div
                className="jsx-__scopedHash input"
              >
                <JSXStyle
                  css="__scoped"
                  styleId="__scopedHash"
                />
                <input
                  className="jsx-__scopedHash input__field"
                  name="name"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Fund name"
                  type="text"
                  value=""
                />
                <div
                  className="jsx-__scopedHash input__error"
                />
              </div>
            </Input>
            <h4
              className="jsx-__scopedHash"
            >
              Melon Default Configuration:
            </h4>
            <p
              className="jsx-__scopedHash"
            >
              For this version, the modules that your fund will use are predefined ie. you do not need to choose a module. For your record, below are the predefined modules for this version.
            </p>
            <div
              className="jsx-__scopedHash setup__exchanges"
            >
              <h4
                className="jsx-__scopedHash"
              >
                Exchange:
              </h4>
              <div
                className="jsx-__scopedHash setup__exchanges-checkbox"
              >
                <Checkbox
                  defaultChecked={true}
                  disabled={true}
                  name="exchanges"
                  text="OasisDex"
                  value="OasisDex"
                >
                  <label
                    className="jsx-__scopedHash checkbox"
                  >
                    <JSXStyle
                      css="__scoped"
                      styleId="__scopedHash"
                    />
                    <input
                      className="jsx-__scopedHash checkbox__input"
                      defaultChecked={true}
                      disabled={true}
                      name="exchanges"
                      type="checkbox"
                      value="OasisDex"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__checkmark"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__text"
                    >
                      OasisDex
                    </span>
                  </label>
                </Checkbox>
              </div>
              <div
                className="jsx-__scopedHash setup__exchanges-checkbox"
              >
                <Checkbox
                  defaultChecked={true}
                  disabled={true}
                  name="exchanges"
                  text="0x relayers"
                  value="0x relayers"
                >
                  <label
                    className="jsx-__scopedHash checkbox"
                  >
                    <JSXStyle
                      css="__scoped"
                      styleId="__scopedHash"
                    />
                    <input
                      className="jsx-__scopedHash checkbox__input"
                      defaultChecked={true}
                      disabled={true}
                      name="exchanges"
                      type="checkbox"
                      value="0x relayers"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__checkmark"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__text"
                    >
                      0x relayers
                    </span>
                  </label>
                </Checkbox>
              </div>
            </div>
            <div
              className="jsx-__scopedHash setup__info"
            >
              Pricefeed:
               
              <a
                className="jsx-__scopedHash"
                href="https://etherscan.io/address/foo"
                rel="noopener noreferrer"
                target="_blank"
              >
                <strong
                  className="jsx-__scopedHash"
                >
                  Canonical PriceFeed
                </strong>
              </a>
              <br
                className="jsx-__scopedHash"
              />
              Asset Registrar: 
              <strong
                className="jsx-__scopedHash"
              >
                Melon 
                Naxos
                 Asset Universe
              </strong>
              <div
                className="jsx-__scopedHash"
              >
                Compliance (invest/redeem):
                 
                <a
                  className="jsx-__scopedHash"
                  href="https://etherscan.io/address/foo"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <strong
                    className="jsx-__scopedHash"
                  >
                    Only manager can invest (in WETH)
                  </strong>
                </a>
              </div>
              Risk Management: 
              <strong
                className="jsx-__scopedHash"
              >
                Disabled (all trades allowed)
              </strong>
            </div>
            <Button
              type="submit"
            >
              <button
                className="jsx-__scopedHash button button--medium button--primary"
                onClick={[Function]}
                type="submit"
              >
                <JSXStyle
                  css="__scoped"
                  styleId="__scopedHash"
                />
                Create and deploy my fund!
              </button>
            </Button>
          </form>
        </Form>
      </div>
    </Component>
  </Formik>
</WithFormik(Function)>
`;

exports[`Setup should render correctly with networkId 1`] = `
<WithFormik(Function)
  config={
    Object {
      "canonicalPriceFeedAddress": "foo",
      "competitionComplianceAddress": "bar",
      "onlyManagerCompetitionAddress": "foo",
    }
  }
  initialValues={
    Object {
      "name": "",
    }
  }
  networkId="42"
  onSubmit={[MockFunction]}
>
  <Formik
    config={
      Object {
        "canonicalPriceFeedAddress": "foo",
        "competitionComplianceAddress": "bar",
        "onlyManagerCompetitionAddress": "foo",
      }
    }
    enableReinitialize={true}
    handleSubmit={[Function]}
    initialValues={
      Object {
        "name": "",
      }
    }
    isInitialValid={false}
    networkId="42"
    onSubmit={[Function]}
    render={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
    validationSchema={[Function]}
  >
    <Component
      config={
        Object {
          "canonicalPriceFeedAddress": "foo",
          "competitionComplianceAddress": "bar",
          "onlyManagerCompetitionAddress": "foo",
        }
      }
      dirty={false}
      errors={Object {}}
      handleBlur={[Function]}
      handleChange={[Function]}
      handleReset={[Function]}
      handleSubmit={[Function]}
      initialValues={
        Object {
          "name": "",
        }
      }
      isSubmitting={false}
      isValid={false}
      isValidating={false}
      networkId="42"
      onSubmit={[MockFunction]}
      registerField={[Function]}
      resetForm={[Function]}
      setError={[Function]}
      setErrors={[Function]}
      setFieldError={[Function]}
      setFieldTouched={[Function]}
      setFieldValue={[Function]}
      setFormikState={[Function]}
      setStatus={[Function]}
      setSubmitting={[Function]}
      setTouched={[Function]}
      setValues={[Function]}
      submitCount={0}
      submitForm={[Function]}
      touched={Object {}}
      unregisterField={[Function]}
      validateField={[Function]}
      validateForm={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
      values={
        Object {
          "name": "",
        }
      }
    >
      <div
        className="jsx-__scopedHash setup"
      >
        <JSXStyle
          css="__scoped"
          styleId="__scopedHash"
        />
        <h3
          className="jsx-__scopedHash"
        >
          Setup your fund
        </h3>
        <Form
          onSubmit={[Function]}
        >
          <form
            className="form"
            onSubmit={[Function]}
          >
            <Input
              name="name"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="Fund name"
              required={true}
              type="text"
              value=""
            >
              <div
                className="jsx-__scopedHash input"
              >
                <JSXStyle
                  css="__scoped"
                  styleId="__scopedHash"
                />
                <input
                  className="jsx-__scopedHash input__field"
                  name="name"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Fund name"
                  type="text"
                  value=""
                />
                <div
                  className="jsx-__scopedHash input__error"
                />
              </div>
            </Input>
            <h4
              className="jsx-__scopedHash"
            >
              Melon Default Configuration:
            </h4>
            <p
              className="jsx-__scopedHash"
            >
              For this version, the modules that your fund will use are predefined ie. you do not need to choose a module. For your record, below are the predefined modules for this version.
            </p>
            <div
              className="jsx-__scopedHash setup__exchanges"
            >
              <h4
                className="jsx-__scopedHash"
              >
                Exchange:
              </h4>
              <div
                className="jsx-__scopedHash setup__exchanges-checkbox"
              >
                <Checkbox
                  defaultChecked={true}
                  disabled={true}
                  name="exchanges"
                  text="OasisDex"
                  value="OasisDex"
                >
                  <label
                    className="jsx-__scopedHash checkbox"
                  >
                    <JSXStyle
                      css="__scoped"
                      styleId="__scopedHash"
                    />
                    <input
                      className="jsx-__scopedHash checkbox__input"
                      defaultChecked={true}
                      disabled={true}
                      name="exchanges"
                      type="checkbox"
                      value="OasisDex"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__checkmark"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__text"
                    >
                      OasisDex
                    </span>
                  </label>
                </Checkbox>
              </div>
              <div
                className="jsx-__scopedHash setup__exchanges-checkbox"
              >
                <Checkbox
                  defaultChecked={true}
                  disabled={true}
                  name="exchanges"
                  text="0x relayers"
                  value="0x relayers"
                >
                  <label
                    className="jsx-__scopedHash checkbox"
                  >
                    <JSXStyle
                      css="__scoped"
                      styleId="__scopedHash"
                    />
                    <input
                      className="jsx-__scopedHash checkbox__input"
                      defaultChecked={true}
                      disabled={true}
                      name="exchanges"
                      type="checkbox"
                      value="0x relayers"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__checkmark"
                    />
                    <span
                      className="jsx-__scopedHash checkbox__text"
                    >
                      0x relayers
                    </span>
                  </label>
                </Checkbox>
              </div>
            </div>
            <div
              className="jsx-__scopedHash setup__info"
            >
              Pricefeed:
               
              <a
                className="jsx-__scopedHash"
                href="https://kovan.etherscan.io/address/foo"
                rel="noopener noreferrer"
                target="_blank"
              >
                <strong
                  className="jsx-__scopedHash"
                >
                  Canonical PriceFeed
                </strong>
              </a>
              <br
                className="jsx-__scopedHash"
              />
              Asset Registrar: 
              <strong
                className="jsx-__scopedHash"
              >
                Melon 
                Naxos
                 Asset Universe
              </strong>
              <div
                className="jsx-__scopedHash"
              >
                Compliance (invest/redeem):
                 
                <a
                  className="jsx-__scopedHash"
                  href="https://kovan.etherscan.io/address/foo"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <strong
                    className="jsx-__scopedHash"
                  >
                    Only manager can invest (in WETH)
                  </strong>
                </a>
              </div>
              Risk Management: 
              <strong
                className="jsx-__scopedHash"
              >
                Disabled (all trades allowed)
              </strong>
            </div>
            <Button
              type="submit"
            >
              <button
                className="jsx-__scopedHash button button--medium button--primary"
                onClick={[Function]}
                type="submit"
              >
                <JSXStyle
                  css="__scoped"
                  styleId="__scopedHash"
                />
                Create and deploy my fund!
              </button>
            </Button>
          </form>
        </Form>
      </div>
    </Component>
  </Formik>
</WithFormik(Function)>
`;
