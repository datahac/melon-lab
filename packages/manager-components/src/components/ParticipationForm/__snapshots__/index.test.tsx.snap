// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ParticipationForm should render correctly 1`] = `
<WithFormik(withHandlers(ParticipationForm))
  dataValid={true}
  decimals={4}
  fund={
    Object {
      "sharePrice": 5,
    }
  }
  initialValues={
    Object {
      "price": 1,
      "type": "Slices",
    }
  }
  quoteAsset="WETH-T"
  setup={true}
>
  <Formik
    dataValid={true}
    decimals={4}
    enableReinitialize={true}
    fund={
      Object {
        "sharePrice": 5,
      }
    }
    handleSubmit={[Function]}
    initialValues={
      Object {
        "price": 1,
        "type": "Slices",
      }
    }
    isInitialValid={false}
    onSubmit={[Function]}
    quoteAsset="WETH-T"
    render={[Function]}
    setup={true}
    validateOnBlur={true}
    validateOnChange={true}
    validationSchema={[Function]}
  >
    <withHandlers(ParticipationForm)
      dataValid={true}
      decimals={4}
      dirty={false}
      errors={Object {}}
      fund={
        Object {
          "sharePrice": 5,
        }
      }
      handleBlur={[Function]}
      handleChange={[Function]}
      handleReset={[Function]}
      handleSubmit={[Function]}
      initialValues={
        Object {
          "price": 1,
          "type": "Slices",
        }
      }
      isSubmitting={false}
      isValid={false}
      isValidating={false}
      quoteAsset="WETH-T"
      registerField={[Function]}
      resetForm={[Function]}
      setError={[Function]}
      setErrors={[Function]}
      setFieldError={[Function]}
      setFieldTouched={[Function]}
      setFieldValue={[Function]}
      setFormikState={[Function]}
      setStatus={[Function]}
      setSubmitting={[Function]}
      setTouched={[Function]}
      setValues={[Function]}
      setup={true}
      submitCount={0}
      submitForm={[Function]}
      touched={Object {}}
      unregisterField={[Function]}
      validateField={[Function]}
      validateForm={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
      values={
        Object {
          "price": 1,
          "type": "Slices",
        }
      }
    >
      <ParticipationForm
        dataValid={true}
        decimals={4}
        dirty={false}
        errors={Object {}}
        fund={
          Object {
            "sharePrice": 5,
          }
        }
        handleBlur={[Function]}
        handleChange={[Function]}
        handleReset={[Function]}
        handleSubmit={[Function]}
        initialValues={
          Object {
            "price": 1,
            "type": "Slices",
          }
        }
        isSubmitting={false}
        isValid={false}
        isValidating={false}
        onChange={[Function]}
        quoteAsset="WETH-T"
        registerField={[Function]}
        resetForm={[Function]}
        setError={[Function]}
        setErrors={[Function]}
        setFieldError={[Function]}
        setFieldTouched={[Function]}
        setFieldValue={[Function]}
        setFormikState={[Function]}
        setStatus={[Function]}
        setSubmitting={[Function]}
        setTouched={[Function]}
        setValues={[Function]}
        setup={true}
        submitCount={0}
        submitForm={[Function]}
        touched={Object {}}
        unregisterField={[Function]}
        validateField={[Function]}
        validateForm={[Function]}
        validateOnBlur={true}
        validateOnChange={true}
        values={
          Object {
            "price": 1,
            "type": "Slices",
          }
        }
      >
        <div
          className="jsx-__scopedHash participation-form"
        >
          <JSXStyle
            css="__scoped"
            styleId="__scopedHash"
          />
          <h3
            className="jsx-__scopedHash"
          >
            Participation
          </h3>
          <Form
            onSubmit={[Function]}
          >
            <form
              className="form"
              onSubmit={[Function]}
            >
              <div
                className="jsx-__scopedHash participation-form__input"
              >
                <Input
                  disabled={false}
                  formatNumber={true}
                  insideLabel="true"
                  label="Quantity (Shares)"
                  name="quantity"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="0.0000"
                  required={true}
                  type="number"
                >
                  <div
                    className="jsx-__scopedHash input input--inside-label"
                  >
                    <JSXStyle
                      css="__scoped"
                      styleId="__scopedHash"
                    />
                    <span
                      className="jsx-__scopedHash input__label"
                    >
                      Quantity (Shares)
                    </span>
                    <NumberFormat
                      allowEmptyFormatting={false}
                      allowNegative={true}
                      className="input__field"
                      decimalScale={4}
                      decimalSeparator="."
                      disabled={false}
                      displayType="input"
                      fixedDecimalScale={true}
                      getInputRef={[Function]}
                      isAllowed={[Function]}
                      isNumericString={true}
                      name="quantity"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseUp={[Function]}
                      onValueChange={[Function]}
                      placeholder="0.0000"
                      prefix=""
                      suffix=""
                      type="text"
                    >
                      <input
                        className="input__field"
                        disabled={false}
                        name="quantity"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseUp={[Function]}
                        placeholder="0.0000"
                        type="text"
                        value=""
                      />
                    </NumberFormat>
                    <div
                      className="jsx-__scopedHash input__error"
                    />
                  </div>
                </Input>
              </div>
              <div
                className="jsx-__scopedHash participation-form__input"
              >
                <Button
                  disabled={false}
                  type="submit"
                >
                  <button
                    className="jsx-__scopedHash button button--medium button--primary"
                    disabled={false}
                    onClick={[Function]}
                    type="submit"
                  >
                    <JSXStyle
                      css="__scoped"
                      styleId="__scopedHash"
                    />
                    Submit request
                  </button>
                </Button>
              </div>
            </form>
          </Form>
        </div>
      </ParticipationForm>
    </withHandlers(ParticipationForm)>
  </Formik>
</WithFormik(withHandlers(ParticipationForm))>
`;
