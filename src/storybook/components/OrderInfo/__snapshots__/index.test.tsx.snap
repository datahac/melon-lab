// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Order Info should render correctly 1`] = `
<div
  className="order-info"
>
  <style
    jsx={true}
  >
    <type
      0="p"
      1="r"
      2="o"
      3="p"
      4="s"
      key="key"
    >
      rendered
    </type>
  </style>
  <div
    className="order-info__prices"
  >
    <div
      className="order-info__last-price"
    >
      <span>
        N/A
      </span>
      <span
        className="order-info__price-desc"
      >
        Last Price
      </span>
    </div>
    <div
      className="order-info__bid"
    >
      <span>
        N/A
      </span>
      <span
        className="order-info__price-desc"
      >
        Bid
      </span>
    </div>
    <div
      className="order-info__ask"
    >
      <span>
        N/A
      </span>
      <span
        className="order-info__price-desc"
      >
        Ask
      </span>
    </div>
  </div>
  <div
    className="order-info__balances"
  >
    <div
      className="order-info__balance"
    >
      <span
        className="order-info__balance-desc"
      >
        ETH
        :
      </span>
       
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={30}
      />
    </div>
    <div
      className="order-info__balance"
    >
      <span
        className="order-info__balance-desc"
      >
        MLN
        :
      </span>
       
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={20}
      />
    </div>
  </div>
</div>
`;

exports[`Order Info should render correctly with ask 1`] = `
<div
  className="order-info"
>
  <style
    jsx={true}
  >
    <type
      0="p"
      1="r"
      2="o"
      3="p"
      4="s"
      key="key"
    >
      rendered
    </type>
  </style>
  <div
    className="order-info__prices"
  >
    <div
      className="order-info__last-price"
    >
      <span>
        N/A
      </span>
      <span
        className="order-info__price-desc"
      >
        Last Price
      </span>
    </div>
    <div
      className="order-info__bid"
    >
      <span>
        N/A
      </span>
      <span
        className="order-info__price-desc"
      >
        Bid
      </span>
    </div>
    <div
      className="order-info__ask"
    >
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={0.5}
      />
      <span
        className="order-info__price-desc"
      >
        Ask
      </span>
    </div>
  </div>
  <div
    className="order-info__balances"
  >
    <div
      className="order-info__balance"
    >
      <span
        className="order-info__balance-desc"
      >
        ETH
        :
      </span>
       
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={30}
      />
    </div>
    <div
      className="order-info__balance"
    >
      <span
        className="order-info__balance-desc"
      >
        MLN
        :
      </span>
       
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={20}
      />
    </div>
  </div>
</div>
`;

exports[`Order Info should render correctly with bid 1`] = `
<div
  className="order-info"
>
  <style
    jsx={true}
  >
    <type
      0="p"
      1="r"
      2="o"
      3="p"
      4="s"
      key="key"
    >
      rendered
    </type>
  </style>
  <div
    className="order-info__prices"
  >
    <div
      className="order-info__last-price"
    >
      <span>
        N/A
      </span>
      <span
        className="order-info__price-desc"
      >
        Last Price
      </span>
    </div>
    <div
      className="order-info__bid"
    >
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={0.5}
      />
      <span
        className="order-info__price-desc"
      >
        Bid
      </span>
    </div>
    <div
      className="order-info__ask"
    >
      <span>
        N/A
      </span>
      <span
        className="order-info__price-desc"
      >
        Ask
      </span>
    </div>
  </div>
  <div
    className="order-info__balances"
  >
    <div
      className="order-info__balance"
    >
      <span
        className="order-info__balance-desc"
      >
        ETH
        :
      </span>
       
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={30}
      />
    </div>
    <div
      className="order-info__balance"
    >
      <span
        className="order-info__balance-desc"
      >
        MLN
        :
      </span>
       
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={20}
      />
    </div>
  </div>
</div>
`;

exports[`Order Info should render correctly with lastPrice 1`] = `
<div
  className="order-info"
>
  <style
    jsx={true}
  >
    <type
      0="p"
      1="r"
      2="o"
      3="p"
      4="s"
      key="key"
    >
      rendered
    </type>
  </style>
  <div
    className="order-info__prices"
  >
    <div
      className="order-info__last-price"
    >
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={0.5}
      />
      <span
        className="order-info__price-desc"
      >
        Last Price
      </span>
    </div>
    <div
      className="order-info__bid"
    >
      <span>
        N/A
      </span>
      <span
        className="order-info__price-desc"
      >
        Bid
      </span>
    </div>
    <div
      className="order-info__ask"
    >
      <span>
        N/A
      </span>
      <span
        className="order-info__price-desc"
      >
        Ask
      </span>
    </div>
  </div>
  <div
    className="order-info__balances"
  >
    <div
      className="order-info__balance"
    >
      <span
        className="order-info__balance-desc"
      >
        ETH
        :
      </span>
       
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={30}
      />
    </div>
    <div
      className="order-info__balance"
    >
      <span
        className="order-info__balance-desc"
      >
        MLN
        :
      </span>
       
      <NumberFormat
        allowEmptyFormatting={false}
        allowNegative={true}
        decimalScale={4}
        decimalSeparator="."
        displayType="text"
        fixedDecimalScale={true}
        getInputRef={[Function]}
        isAllowed={[Function]}
        isNumericString={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseUp={[Function]}
        onValueChange={[Function]}
        prefix=""
        suffix=""
        thousandSeparator={true}
        type="text"
        value={20}
      />
    </div>
  </div>
</div>
`;
